{"version":3,"file":"index-DtwuKsGr.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/@remix-run/router/dist/router.js","../../node_modules/react-router/dist/index.js","../../node_modules/react-router-dom/dist/index.js","../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js","../../node_modules/zustand/esm/vanilla.mjs","../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","../../node_modules/use-sync-external-store/shim/index.js","../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js","../../node_modules/use-sync-external-store/shim/with-selector.js","../../node_modules/zustand/esm/index.mjs","../../node_modules/zustand/esm/middleware.mjs","../../src/stores/authStore.ts","../../src/components/layout/AppHeader.tsx","../../src/components/layout/AppSidebar.tsx","../../node_modules/axios/lib/helpers/bind.js","../../node_modules/axios/lib/utils.js","../../node_modules/axios/lib/core/AxiosError.js","../../node_modules/axios/lib/helpers/null.js","../../node_modules/axios/lib/helpers/toFormData.js","../../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../../node_modules/axios/lib/helpers/buildURL.js","../../node_modules/axios/lib/core/InterceptorManager.js","../../node_modules/axios/lib/defaults/transitional.js","../../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../../node_modules/axios/lib/platform/browser/classes/FormData.js","../../node_modules/axios/lib/platform/browser/classes/Blob.js","../../node_modules/axios/lib/platform/browser/index.js","../../node_modules/axios/lib/platform/common/utils.js","../../node_modules/axios/lib/platform/index.js","../../node_modules/axios/lib/helpers/toURLEncodedForm.js","../../node_modules/axios/lib/helpers/formDataToJSON.js","../../node_modules/axios/lib/defaults/index.js","../../node_modules/axios/lib/helpers/parseHeaders.js","../../node_modules/axios/lib/core/AxiosHeaders.js","../../node_modules/axios/lib/core/transformData.js","../../node_modules/axios/lib/cancel/isCancel.js","../../node_modules/axios/lib/cancel/CanceledError.js","../../node_modules/axios/lib/core/settle.js","../../node_modules/axios/lib/helpers/parseProtocol.js","../../node_modules/axios/lib/helpers/speedometer.js","../../node_modules/axios/lib/helpers/throttle.js","../../node_modules/axios/lib/helpers/progressEventReducer.js","../../node_modules/axios/lib/helpers/isURLSameOrigin.js","../../node_modules/axios/lib/helpers/cookies.js","../../node_modules/axios/lib/helpers/isAbsoluteURL.js","../../node_modules/axios/lib/helpers/combineURLs.js","../../node_modules/axios/lib/core/buildFullPath.js","../../node_modules/axios/lib/core/mergeConfig.js","../../node_modules/axios/lib/helpers/resolveConfig.js","../../node_modules/axios/lib/adapters/xhr.js","../../node_modules/axios/lib/helpers/composeSignals.js","../../node_modules/axios/lib/helpers/trackStream.js","../../node_modules/axios/lib/adapters/fetch.js","../../node_modules/axios/lib/adapters/adapters.js","../../node_modules/axios/lib/core/dispatchRequest.js","../../node_modules/axios/lib/env/data.js","../../node_modules/axios/lib/helpers/validator.js","../../node_modules/axios/lib/core/Axios.js","../../node_modules/axios/lib/cancel/CancelToken.js","../../node_modules/axios/lib/helpers/spread.js","../../node_modules/axios/lib/helpers/isAxiosError.js","../../node_modules/axios/lib/helpers/HttpStatusCode.js","../../node_modules/axios/lib/axios.js","../../node_modules/axios/index.js","../../src/services/api.ts","../../src/pages/Dashboard.tsx","../../src/pages/Connections.tsx","../../src/pages/Topics.tsx","../../src/pages/Consumers.tsx","../../src/pages/Producers.tsx","../../src/pages/Messages.tsx","../../src/pages/Login.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * @remix-run/router v1.23.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/v6/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/v6/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/v6/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/v6/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n *\n * @deprecated The `json` method is deprecated in favor of returning raw objects.\n * This method will be removed in v7.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass DataWithResponseInit {\n  constructor(data, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data;\n    this.init = init || null;\n  }\n}\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nfunction data(data, init) {\n  return new DataWithResponseInit(data, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n/**\n * @deprecated The `defer` method is deprecated in favor of returning raw\n * objects. This method will be removed in v7.\n */\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = new Set();\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate = undefined;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = undefined;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked, after the url\n            // restoration is also complete.  See:\n            // https://github.com/remix-run/react-router/issues/11613\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Remove any lingering deleted fetchers that have already been removed\n    // from state.fetchers\n    deletedFetchers.forEach(key => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        deletedFetchersKeys.push(key);\n      }\n    });\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    } else {\n      // We already called deleteFetcher() on these, can remove them from this\n      // Set now that we've handed the keys off to the data layer\n      deletedFetchersKeys.forEach(key => deletedFetchers.delete(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = opts != null && opts.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ?\n    // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n    state.matches : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", state, request, [actionMatch], matches, null);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = _extends({}, state.errors, errors);\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [match], requestMatches, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", state, fetchRequest, [match], matches, key);\n    let result = results[match.route.id];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, isNavigation, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true || redirect.response.headers.has(\"X-Remix-Replace\") ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, state, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties);\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach(m => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, future.v7_relativeSplatPath)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state, matches, matchesToLoad, fetchersToLoad, request) {\n    let currentMatches = state.matches;\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\"loader\", state, request, matchesToLoad, matches, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.controller) {\n        let results = await callDataStrategy(\"loader\", state, createClientSideRequest(init.history, f.path, f.controller.signal), [f.match], f.matches, f.key);\n        let result = results[f.match.route.id];\n        // Fetcher results are keyed by fetcher key from here on out, not routeId\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    await Promise.all([resolveNavigationDeferredResults(matches, loaderResults, request.signal, currentMatches, state.loaderData), resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    // If this fetcher was previously marked for deletion, unmark it since we\n    // have a new instance\n    if (deletedFetchers.has(key)) {\n      deletedFetchers.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    // If we opted into the flag we can clear this now since we're calling\n    // deleteFetcher() at the end of updateState() and we've already handed the\n    // deleted fetcher keys off to the data layer.\n    // If not, we're eagerly calling deleteFetcher() and we need to keep this\n    // Set populated until the next updateState call, and we'll clear\n    // `deletedFetchers` then\n    if (future.v7_fetcherPersist) {\n      deletedFetchers.delete(key);\n    }\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      deletedFetchers.add(key);\n      if (!future.v7_fetcherPersist) {\n        deleteFetcher(key);\n      }\n    } else {\n      activeFetchers.set(key, count);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\n    if (!patchRoutesOnNavigationImpl) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // Avoid loops if the second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, dataStrategy);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, type, null, request, matchesToLoad, matches, null, manifest, mapRouteProperties, requestContext);\n    let dataResults = {};\n    await Promise.all(matches.map(async match => {\n      if (!(match.route.id in results)) {\n        return;\n      }\n      let result = results[match.route.id];\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n    }));\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary) {\n  if (includeBoundary === void 0) {\n    includeBoundary = false;\n  }\n  let index = matches.findIndex(m => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);\n  }\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  var _childrenToPatch;\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties, [routeId || \"_\", \"patch\", String(((_childrenToPatch = childrenToPatch) == null ? void 0 : _childrenToPatch.length) || \"0\")], manifest);\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  // Most optimal check is by id\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  // Second is by pathing differences\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children.every((aChild, i) => {\n    var _existingRoute$childr;\n    return (_existingRoute$childr = existingRoute.children) == null ? void 0 : _existingRoute$childr.some(bChild => isSameRoute(aChild, bChild));\n  });\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy(_ref4) {\n  let {\n    matches\n  } = _ref4;\n  let matchesToLoad = matches.filter(m => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  return results.reduce((acc, result, i) => Object.assign(acc, {\n    [matchesToLoad[i].route.id]: result\n  }), {});\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(m => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties, manifest) : undefined);\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some(m => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve = async handlerOverride => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\n        type: ResultType.data,\n        result: undefined\n      });\n    };\n    return _extends({}, match, {\n      shouldLoad,\n      resolve\n    });\n  });\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n  return results;\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadRoutePromise]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      var _result$init3, _result$init4;\n      if (result.data instanceof Error) {\n        var _result$init, _result$init2;\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n          headers: (_result$init2 = result.init) != null && _result$init2.headers ? new Headers(result.init.headers) : undefined\n        };\n      }\n      // Convert thrown data() to ErrorResponse instances\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(((_result$init3 = result.init) == null ? void 0 : _result$init3.status) || 500, undefined, result.data),\n        statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n        headers: (_result$init4 = result.init) != null && _result$init4.headers ? new Headers(result.init.headers) : undefined\n      };\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init5, _result$init6;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,\n      headers: ((_result$init6 = result.init) == null ? void 0 : _result$init6.headers) && new Headers(result.init.headers)\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    var _result$init7, _result$init8;\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: (_result$init7 = result.init) == null ? void 0 : _result$init7.status,\n      headers: (_result$init8 = result.init) != null && _result$init8.headers ? new Headers(result.init.headers) : undefined\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectDataStrategyResultResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveNavigationDeferredResults(matches, results, signal, currentMatches, currentLoaderData) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then(result => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveFetcherDeferredResults(matches, results, revalidatingFetchers) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      routeId,\n      controller\n    } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(controller, \"Expected an AbortController for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, controller.signal, true).then(result => {\n        if (result) {\n          results[key] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, decodePath as UNSAFE_decodePath, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, data, defer, generatePath, getStaticContextFromError, getToPathname, isDataWithResponseInit, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, replace, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.30.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_decodePath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, replace, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/v6/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/v6/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, UNSAFE_decodePath(pathname)), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/v6/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/v6/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/v6/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/v6/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/v6/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _future;\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned$1 = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned$1[key]) {\n    alreadyWarned$1[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\nconst alreadyWarned = {};\nfunction warnOnce(key, message) {\n  if (process.env.NODE_ENV !== \"production\" && !alreadyWarned[message]) {\n    alreadyWarned[message] = true;\n    console.warn(message);\n  }\n}\nconst logDeprecation = (flag, msg, link) => warnOnce(flag, \"\\u26A0\\uFE0F React Router Future Flag Warning: \" + msg + \". \" + (\"You can use the `\" + flag + \"` future flag to opt-in early. \") + (\"For more information, see \" + link + \".\"));\nfunction logV6DeprecationWarnings(renderFuture, routerFuture) {\n  if ((renderFuture == null ? void 0 : renderFuture.v7_startTransition) === undefined) {\n    logDeprecation(\"v7_startTransition\", \"React Router will begin wrapping state updates in `React.startTransition` in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_starttransition\");\n  }\n  if ((renderFuture == null ? void 0 : renderFuture.v7_relativeSplatPath) === undefined && (!routerFuture || routerFuture.v7_relativeSplatPath === undefined)) {\n    logDeprecation(\"v7_relativeSplatPath\", \"Relative route resolution within Splat routes is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath\");\n  }\n  if (routerFuture) {\n    if (routerFuture.v7_fetcherPersist === undefined) {\n      logDeprecation(\"v7_fetcherPersist\", \"The persistence behavior of fetchers is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist\");\n    }\n    if (routerFuture.v7_normalizeFormMethod === undefined) {\n      logDeprecation(\"v7_normalizeFormMethod\", \"Casing of `formMethod` fields is being normalized to uppercase in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod\");\n    }\n    if (routerFuture.v7_partialHydration === undefined) {\n      logDeprecation(\"v7_partialHydration\", \"`RouterProvider` hydration behavior is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_partialhydration\");\n    }\n    if (routerFuture.v7_skipActionErrorRevalidation === undefined) {\n      logDeprecation(\"v7_skipActionErrorRevalidation\", \"The revalidation behavior after 4xx/5xx `action` responses is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation\");\n    }\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  React.useEffect(() => logV6DeprecationWarnings(future, router.future), [router, future]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/v6/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/v6/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/v6/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/v6/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/v6/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/v6/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/v6/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, logV6DeprecationWarnings as UNSAFE_logV6DeprecationWarnings, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.30.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_logV6DeprecationWarnings, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, replace, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\nexport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"viewTransition\"];\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"6\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      flushSync: flushSync,\n      viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  let routerFuture = React.useMemo(() => ({\n    v7_relativeSplatPath: router.future.v7_relativeSplatPath\n  }), [router.future.v7_relativeSplatPath]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future, router.future), [future, router.future]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: routerFuture\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(MemoizedDataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = /*#__PURE__*/React.memo(DataRoutes);\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    viewTransition: viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        flushSync: options.flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        flushSync: options.flushSync,\n        viewTransition: options.viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some(v => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit, useViewTransitionState };\n//# sourceMappingURL=index.js.map\n","// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    const aItemsSet = new Set(aItems);\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItemsSet.has(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/notifyManager.ts\nvar defaultScheduler = (cb) => setTimeout(cb, 0);\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { canFetch, createRetryer, isCancelledError } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    const onError = (error) => {\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!isCancelledError(error)) {\n        this.#cache.config.onError?.(\n          error,\n          this\n        );\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this\n        );\n      }\n      this.scheduleGc();\n    };\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === void 0) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n            );\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        try {\n          this.setData(data);\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this\n        );\n        this.scheduleGc();\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    return this.#retryer.start();\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          this.#revertState = void 0;\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n        case \"error\":\n          const error = action.error;\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: \"idle\" };\n          }\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n","/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\"),\n  shim = require(\"use-sync-external-store/shim\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useSyncExternalStore = shim.useSyncExternalStore,\n  useRef = React.useRef,\n  useEffect = React.useEffect,\n  useMemo = React.useMemo,\n  useDebugValue = React.useDebugValue;\nexports.useSyncExternalStoreWithSelector = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n  selector,\n  isEqual\n) {\n  var instRef = useRef(null);\n  if (null === instRef.current) {\n    var inst = { hasValue: !1, value: null };\n    instRef.current = inst;\n  } else inst = instRef.current;\n  instRef = useMemo(\n    function () {\n      function memoizedSelector(nextSnapshot) {\n        if (!hasMemo) {\n          hasMemo = !0;\n          memoizedSnapshot = nextSnapshot;\n          nextSnapshot = selector(nextSnapshot);\n          if (void 0 !== isEqual && inst.hasValue) {\n            var currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSnapshot))\n              return (memoizedSelection = currentSelection);\n          }\n          return (memoizedSelection = nextSnapshot);\n        }\n        currentSelection = memoizedSelection;\n        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;\n        var nextSelection = selector(nextSnapshot);\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n          return (memoizedSnapshot = nextSnapshot), currentSelection;\n        memoizedSnapshot = nextSnapshot;\n        return (memoizedSelection = nextSelection);\n      }\n      var hasMemo = !1,\n        memoizedSnapshot,\n        memoizedSelection,\n        maybeGetServerSnapshot =\n          void 0 === getServerSnapshot ? null : getServerSnapshot;\n      return [\n        function () {\n          return memoizedSelector(getSnapshot());\n        },\n        null === maybeGetServerSnapshot\n          ? void 0\n          : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            }\n      ];\n    },\n    [getSnapshot, getServerSnapshot, selector, isEqual]\n  );\n  var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n  useEffect(\n    function () {\n      inst.hasValue = !0;\n      inst.value = value;\n    },\n    [value]\n  );\n  useDebugValue(value);\n  return value;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (_e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (_e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (_e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return [\n              true,\n              options.migrate(\n                deserializedStorageValue.state,\n                deserializedStorageValue.version\n              )\n            ];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import { create } from 'zustand'\nimport { persist } from 'zustand/middleware'\n\ninterface User {\n  id: string\n  username: string\n  email: string\n  roles: string[]\n}\n\ninterface AuthState {\n  user: User | null\n  token: string | null\n  isAuthenticated: boolean\n  login: (username: string, password: string) => Promise<void>\n  logout: () => void\n  setUser: (user: User) => void\n  setToken: (token: string) => void\n}\n\n// const API_BASE_URL = '/api/v1' // Removed for development\n\nexport const useAuthStore = create<AuthState>()(\n  persist(\n    (set) => ({\n      user: null,\n      token: null,\n      isAuthenticated: false,\n\n      login: async (username: string, _password: string) => {\n        // For development - skip authentication\n        set({\n          user: {\n            id: '1',\n            username,\n            email: `${username}@example.com`,\n            roles: ['user']\n          },\n          token: 'dummy-token',\n          isAuthenticated: true,\n        })\n      },\n\n      logout: () => {\n        set({\n          user: null,\n          token: null,\n          isAuthenticated: false,\n        })\n      },\n\n      setUser: (user: User) => {\n        set({ user })\n      },\n\n      setToken: (token: string) => {\n        set({ token, isAuthenticated: true })\n      },\n    }),\n    {\n      name: 'auth-storage',\n      partialize: (state) => ({\n        user: state.user,\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n      }),\n    }\n  )\n)\n","import React from 'react'\nimport { Layout, Dropdown, Avatar, Space, Typography } from 'antd'\nimport { UserOutlined, LogoutOutlined, SettingOutlined, ApiOutlined } from '@ant-design/icons'\nimport { useAuthStore } from '../../stores/authStore'\n\nconst { Header } = Layout\nconst { Text } = Typography\n\nconst AppHeader: React.FC = () => {\n  const { user, logout } = useAuthStore()\n\n  const userMenuItems = [\n    {\n      key: 'profile',\n      icon: <UserOutlined />,\n      label: 'Profile',\n    },\n    {\n      key: 'settings',\n      icon: <SettingOutlined />,\n      label: 'Settings',\n    },\n    {\n      type: 'divider' as const,\n    },\n    {\n      key: 'logout',\n      icon: <LogoutOutlined />,\n      label: 'Logout',\n      onClick: logout,\n    },\n  ]\n\n  return (\n    <Header className=\"app-header\">\n      <div className=\"app-logo\">\n        <ApiOutlined className=\"app-logo-icon\" />\n        <span>Kafka Web Tool v2</span>\n      </div>\n      \n      <div className=\"app-user-menu\">\n        <Space>\n          <Text style={{ color: 'white' }}>\n            Welcome, {user?.username || 'User'}\n          </Text>\n          <Dropdown\n            menu={{ items: userMenuItems }}\n            placement=\"bottomRight\"\n            trigger={['click']}\n          >\n            <Avatar\n              style={{ cursor: 'pointer' }}\n              icon={<UserOutlined />}\n            />\n          </Dropdown>\n        </Space>\n      </div>\n    </Header>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { Layout, Menu } from 'antd'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport {\n  DashboardOutlined,\n  ApiOutlined,\n  UnorderedListOutlined,\n  TeamOutlined,\n  SendOutlined,\n  MessageOutlined,\n} from '@ant-design/icons'\n\nconst { Sider } = Layout\n\nconst AppSidebar: React.FC = () => {\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const menuItems = [\n    {\n      key: '/dashboard',\n      icon: <DashboardOutlined />,\n      label: 'Dashboard',\n    },\n    {\n      key: '/connections',\n      icon: <ApiOutlined />,\n      label: 'Connections',\n    },\n    {\n      key: '/topics',\n      icon: <UnorderedListOutlined />,\n      label: 'Topics',\n    },\n    {\n      key: '/consumers',\n      icon: <TeamOutlined />,\n      label: 'Consumers',\n    },\n    {\n      key: '/producers',\n      icon: <SendOutlined />,\n      label: 'Producers',\n    },\n    {\n      key: '/messages',\n      icon: <MessageOutlined />,\n      label: 'Messages',\n    },\n  ]\n\n  const handleMenuClick = ({ key }: { key: string }) => {\n    navigate(key)\n  }\n\n  const selectedKey = location.pathname === '/' ? '/dashboard' : location.pathname\n\n  return (\n    <Sider\n      width={200}\n      className=\"app-sidebar\"\n      breakpoint=\"lg\"\n      collapsedWidth=\"0\"\n    >\n      <Menu\n        mode=\"inline\"\n        theme=\"dark\"\n        selectedKeys={[selectedKey]}\n        items={menuItems}\n        onClick={handleMenuClick}\n        style={{ height: '100%', borderRight: 0 }}\n      />\n    </Sider>\n  )\n}\n\nexport default AppSidebar\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\nconst {iterator, toStringTag} = Symbol;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(toStringTag in val) && !(iterator in val);\n}\n\n/**\n * Determine if a value is an empty object (safely handles Buffers)\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an empty object, otherwise false\n */\nconst isEmptyObject = (val) => {\n  // Early return for non-objects or Buffers to prevent RangeError\n  if (!isObject(val) || isBuffer(val)) {\n    return false;\n  }\n  \n  try {\n    return Object.keys(val).length === 0 && Object.getPrototypeOf(val) === Object.prototype;\n  } catch (e) {\n    // Fallback for any other objects that might cause RangeError with Object.keys()\n    return false;\n  }\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Buffer check\n    if (isBuffer(obj)) {\n      return;\n    }\n\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  if (isBuffer(obj)){\n    return null;\n  }\n\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[iterator];\n\n  const _iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = _iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[toStringTag] === 'FormData' && thing[iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      //Buffer check\n      if (isBuffer(source)) {\n        return source;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\n\nconst isIterable = (thing) => thing != null && isFunction(thing[iterator]);\n\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isEmptyObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap,\n  isIterable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isBoolean(value)) {\n      return value.toString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), {\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    },\n    ...options\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isObject(header) && utils.isIterable(header)) {\n      let obj = {}, dest, key;\n      for (const entry of header) {\n        if (!utils.isArray(entry)) {\n          throw TypeError('Object iterator must return a key-value pair');\n        }\n\n        obj[key = entry[0]] = (dest = obj[key]) ?\n          (utils.isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]]) : entry[1];\n      }\n\n      setHeaders(obj, valueOrRewrite)\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  getSetCookie() {\n    return this.get(\"set-cookie\") || [];\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn(...args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys({...config1, ...config2}), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request, fetchOptions);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /Load failed|fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.11.0\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig || {};\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift(...requestInterceptorChain);\n      chain.push(...responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n","import axios from 'axios'\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: '/api/v1',\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n})\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    // Add auth token if available\n    const token = localStorage.getItem('authToken')\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`\n    }\n    return config\n  },\n  (error) => {\n    return Promise.reject(error)\n  }\n)\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => {\n    return response\n  },\n  (error) => {\n    // Handle common errors\n    if (error.response?.status === 401) {\n      // Unauthorized - redirect to login\n      localStorage.removeItem('authToken')\n      window.location.href = '/login'\n    }\n    return Promise.reject(error)\n  }\n)\n\nexport { api }\nexport default api\n","import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Row, Col, Card, Statistic, Typography, Space, Tag, Button, Table, message, Modal } from 'antd'\nimport {\n  ApiOutlined,\n  UnorderedListOutlined,\n  TeamOutlined,\n  MessageOutlined,\n  CheckCircleOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  PlayCircleOutlined,\n  ReloadOutlined,\n} from '@ant-design/icons'\nimport { api } from '../services/api'\n\nconst { Title } = Typography\n\ninterface DashboardMetrics {\n  totalConnections: number\n  activeConnections: number\n  totalTopics: number\n  totalMessages: number\n  activeSessions: number\n  systemMetrics: {\n    status: string\n    timestamp: string\n  }\n}\n\ninterface RunningConsumer {\n  sessionId: string\n  topic: string\n  consumerGroup: string\n  connectionId: number\n  connectionName: string\n  status: string\n  messagesConsumed: number\n  maxMessages: number\n  startedAt: string\n  isRunning: boolean\n  isPaused: boolean\n}\n\ninterface RecentActivity {\n  type: string\n  message: string\n  color: string\n  timestamp: string\n  sessionId?: string\n  topic?: string\n  connectionId?: number\n  connectionName?: string\n}\n\ninterface HealthMetrics {\n  status: string\n  activeConnections: number\n  activeSessions: number\n  timestamp: string\n}\n\nconst Dashboard: React.FC = () => {\n  const navigate = useNavigate()\n  const [metrics, setMetrics] = useState<DashboardMetrics | null>(null)\n  const [runningConsumers, setRunningConsumers] = useState<RunningConsumer[]>([])\n  const [recentActivity, setRecentActivity] = useState<RecentActivity[]>([])\n  const [healthMetrics, setHealthMetrics] = useState<HealthMetrics | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [refreshing, setRefreshing] = useState(false)\n\n  // Fetch dashboard data\n  const fetchDashboardData = async () => {\n    try {\n      setRefreshing(true)\n\n      const [metricsRes, consumersRes, activityRes, healthRes] = await Promise.all([\n        api.get('/dashboard/metrics'),\n        api.get('/dashboard/running-consumers'),\n        api.get('/dashboard/recent-activity'),\n        api.get('/dashboard/health')\n      ])\n\n      setMetrics(metricsRes.data)\n      setRunningConsumers(consumersRes.data)\n      setRecentActivity(activityRes.data)\n      setHealthMetrics(healthRes.data)\n    } catch (error) {\n      console.error('Failed to fetch dashboard data:', error)\n      message.error('Failed to load dashboard data')\n    } finally {\n      setLoading(false)\n      setRefreshing(false)\n    }\n  }\n\n  // Stop a running consumer\n  const stopConsumer = async (sessionId: string) => {\n    try {\n      await api.post(`/dashboard/running-consumers/${sessionId}/stop`)\n      message.success('Consumer stopped successfully')\n      fetchDashboardData() // Refresh data\n    } catch (error) {\n      console.error('Failed to stop consumer:', error)\n      message.error('Failed to stop consumer')\n    }\n  }\n\n  // Stop all running consumers\n  const stopAllConsumers = async () => {\n    Modal.confirm({\n      title: 'Stop All Running Consumers',\n      content: 'Are you sure you want to stop all running consumers? This action cannot be undone.',\n      okText: 'Yes, Stop All',\n      okType: 'danger',\n      cancelText: 'Cancel',\n      onOk: async () => {\n        try {\n          await api.post('/dashboard/running-consumers/stop-all')\n          message.success('All consumers stopped successfully')\n          fetchDashboardData() // Refresh data\n        } catch (error) {\n          console.error('Failed to stop all consumers:', error)\n          message.error('Failed to stop all consumers')\n        }\n      }\n    })\n  }\n\n  // Format timestamp for display\n  const formatTimestamp = (timestamp: string) => {\n    const date = new Date(timestamp)\n    const now = new Date()\n    const diffMs = now.getTime() - date.getTime()\n    const diffMins = Math.floor(diffMs / 60000)\n\n    if (diffMins < 1) return 'Just now'\n    if (diffMins < 60) return `${diffMins} min ago`\n    if (diffMins < 1440) return `${Math.floor(diffMins / 60)} hr ago`\n    return `${Math.floor(diffMins / 1440)} day ago`\n  }\n\n  // Load data on component mount\n  useEffect(() => {\n    fetchDashboardData()\n\n    // Set up auto-refresh every 30 seconds\n    const interval = setInterval(fetchDashboardData, 30000)\n    return () => clearInterval(interval)\n  }, [])\n\n  // Running consumers table columns\n  const consumerColumns = [\n    {\n      title: 'Topic',\n      dataIndex: 'topic',\n      key: 'topic',\n    },\n    {\n      title: 'Consumer Group',\n      dataIndex: 'consumerGroup',\n      key: 'consumerGroup',\n    },\n    {\n      title: 'Connection',\n      dataIndex: 'connectionName',\n      key: 'connectionName',\n    },\n    {\n      title: 'Messages',\n      key: 'messages',\n      render: (record: RunningConsumer) => (\n        <span>{record.messagesConsumed} / {record.maxMessages || '∞'}</span>\n      ),\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      render: (status: string, record: RunningConsumer) => (\n        <Tag color={record.isRunning ? 'green' : record.isPaused ? 'orange' : 'red'}>\n          {record.isRunning ? 'RUNNING' : record.isPaused ? 'PAUSED' : status}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Started',\n      dataIndex: 'startedAt',\n      key: 'startedAt',\n      render: (startedAt: string) => formatTimestamp(startedAt),\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (record: RunningConsumer) => (\n        <Button\n          type=\"primary\"\n          danger\n          size=\"small\"\n          icon={<StopOutlined />}\n          onClick={() => stopConsumer(record.sessionId)}\n        >\n          Stop\n        </Button>\n      ),\n    },\n  ]\n\n  if (loading) {\n    return (\n      <div style={{ padding: '50px', textAlign: 'center' }}>\n        <Title level={2}>Loading Dashboard...</Title>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div style={{ marginBottom: 24, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Title level={2}>Dashboard</Title>\n        <Button\n          type=\"primary\"\n          icon={<ReloadOutlined />}\n          loading={refreshing}\n          onClick={fetchDashboardData}\n        >\n          Refresh\n        </Button>\n      </div>\n\n      <Row gutter={[16, 16]} className=\"dashboard-stats\">\n        <Col xs={24} sm={12} lg={6}>\n          <Card>\n            <Statistic\n              title=\"Kafka Connections\"\n              value={metrics?.totalConnections || 0}\n              prefix={<ApiOutlined />}\n              suffix={\n                <Space>\n                  <Tag color=\"green\" icon={<CheckCircleOutlined />}>\n                    {metrics?.activeConnections || 0} Active\n                  </Tag>\n                  <Tag color=\"orange\" icon={<ExclamationCircleOutlined />}>\n                    {(metrics?.totalConnections || 0) - (metrics?.activeConnections || 0)} Inactive\n                  </Tag>\n                </Space>\n              }\n            />\n          </Card>\n        </Col>\n\n        <Col xs={24} sm={12} lg={6}>\n          <Card>\n            <Statistic\n              title=\"Topics\"\n              value={metrics?.totalTopics || 0}\n              prefix={<UnorderedListOutlined />}\n              valueStyle={{ color: '#3f8600' }}\n            />\n          </Card>\n        </Col>\n\n        <Col xs={24} sm={12} lg={6}>\n          <Card>\n            <Statistic\n              title=\"Active Consumers\"\n              value={metrics?.activeSessions || 0}\n              prefix={<TeamOutlined />}\n              valueStyle={{ color: '#cf1322' }}\n            />\n          </Card>\n        </Col>\n\n        <Col xs={24} sm={12} lg={6}>\n          <Card>\n            <Statistic\n              title=\"Total Messages\"\n              value={metrics?.totalMessages || 0}\n              prefix={<MessageOutlined />}\n              valueStyle={{ color: '#1890ff' }}\n            />\n          </Card>\n        </Col>\n      </Row>\n\n      {/* Running Consumers Section */}\n      {runningConsumers.length > 0 && (\n        <Row gutter={[16, 16]} style={{ marginTop: 16 }}>\n          <Col span={24}>\n            <Card\n              title={\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <span>Running Consumers ({runningConsumers.length})</span>\n                  <Button\n                    type=\"primary\"\n                    danger\n                    size=\"small\"\n                    icon={<StopOutlined />}\n                    onClick={stopAllConsumers}\n                  >\n                    Stop All\n                  </Button>\n                </div>\n              }\n              size=\"small\"\n            >\n              <Table\n                dataSource={runningConsumers}\n                columns={consumerColumns}\n                rowKey=\"sessionId\"\n                pagination={false}\n                size=\"small\"\n              />\n            </Card>\n          </Col>\n        </Row>\n      )}\n\n      <Row gutter={[16, 16]} style={{ marginTop: 16 }}>\n        <Col xs={24} lg={12}>\n          <Card title=\"Recent Activity\" size=\"small\">\n            <div style={{ padding: '16px 0' }}>\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                {recentActivity.length > 0 ? (\n                  recentActivity.map((activity, index) => (\n                    <div key={index}>\n                      <Tag color={activity.color}>{activity.type.replace('_', ' ').toUpperCase()}</Tag>\n                      <span>{activity.message}</span>\n                      <span style={{ float: 'right', color: '#999' }}>\n                        {formatTimestamp(activity.timestamp)}\n                      </span>\n                    </div>\n                  ))\n                ) : (\n                  <div style={{ textAlign: 'center', color: '#999' }}>\n                    No recent activity\n                  </div>\n                )}\n              </Space>\n            </div>\n          </Card>\n        </Col>\n\n        <Col xs={24} lg={12}>\n          <Card title=\"System Health\" size=\"small\">\n            <div style={{ padding: '16px 0' }}>\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <span>Backend API</span>\n                  <Tag color={healthMetrics?.status === 'UP' ? 'green' : 'red'}>\n                    {healthMetrics?.status === 'UP' ? 'Healthy' : 'Down'}\n                  </Tag>\n                </div>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <span>Active Connections</span>\n                  <Tag color=\"blue\">{healthMetrics?.activeConnections || 0}</Tag>\n                </div>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <span>Active Sessions</span>\n                  <Tag color=\"orange\">{healthMetrics?.activeSessions || 0}</Tag>\n                </div>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <span>Last Updated</span>\n                  <span style={{ color: '#999', fontSize: '12px' }}>\n                    {healthMetrics?.timestamp ? formatTimestamp(healthMetrics.timestamp) : 'Unknown'}\n                  </span>\n                </div>\n              </Space>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row gutter={[16, 16]} style={{ marginTop: 16 }}>\n        <Col span={24}>\n          <Card title=\"Quick Actions\" size=\"small\">\n            <Space wrap>\n              <Button\n                type=\"primary\"\n                icon={<ApiOutlined />}\n                onClick={() => navigate('/connections')}\n              >\n                Add Connection\n              </Button>\n              <Button\n                type=\"default\"\n                icon={<UnorderedListOutlined />}\n                onClick={() => navigate('/topics')}\n              >\n                Manage Topics\n              </Button>\n              <Button\n                type=\"default\"\n                icon={<PlayCircleOutlined />}\n                onClick={() => navigate('/consumers')}\n              >\n                Start Consumer\n              </Button>\n              <Button\n                type=\"default\"\n                icon={<MessageOutlined />}\n                onClick={() => navigate('/producers')}\n              >\n                Send Messages\n              </Button>\n              <Button\n                type=\"default\"\n                icon={<TeamOutlined />}\n                onClick={() => navigate('/messages')}\n              >\n                Browse Messages\n              </Button>\n            </Space>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Dashboard\n","import React, { useState, useEffect } from 'react'\nimport {\n  Typography,\n  Button,\n  Table,\n  Card,\n  Space,\n  Tag,\n  Modal,\n  Form,\n  Input,\n  Select,\n  message,\n} from 'antd'\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  ExclamationCircleOutlined,\n} from '@ant-design/icons'\n// import { useAuthStore } from '../stores/authStore' // Removed for development\n\nconst { Title } = Typography\nconst { Option } = Select\n\ninterface Connection {\n  id: string\n  name: string\n  bootstrapServers: string\n  securityProtocol: string\n  active: boolean\n  createdAt: string\n  status?: 'connected' | 'disconnected' | 'error' // Optional field for UI state\n}\n\nconst Connections: React.FC = () => {\n  const [connections, setConnections] = useState<Connection[]>([])\n  const [loading, setLoading] = useState(true)\n  const [isModalVisible, setIsModalVisible] = useState(false)\n  const [editingConnection, setEditingConnection] = useState<Connection | null>(null)\n  const [testingConnection, setTestingConnection] = useState<string | null>(null)\n  const [form] = Form.useForm()\n  // const { token } = useAuthStore() // Removed for development\n\n  // Fetch connections from backend\n  useEffect(() => {\n    fetchConnections()\n  }, [])\n\n  const fetchConnections = async () => {\n    try {\n      setLoading(true)\n      const response = await fetch('/api/v1/connections', {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n\n      if (response.ok) {\n        const data = await response.json()\n        setConnections(data)\n      } else {\n        message.error('Failed to fetch connections')\n      }\n    } catch (error) {\n      console.error('Error fetching connections:', error)\n      message.error('Failed to fetch connections')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleTestConnection = async (connection: Connection) => {\n    try {\n      setTestingConnection(connection.id)\n      const response = await fetch(`/api/v1/connections/${connection.id}/test`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n\n      const result = await response.json()\n\n      if (response.ok && result.success) {\n        message.success(`Connection \"${connection.name}\" tested successfully!`)\n        // Update connection status to connected\n        setConnections(connections.map(conn =>\n          conn.id === connection.id\n            ? { ...conn, status: 'connected' }\n            : conn\n        ))\n      } else {\n        const errorMsg = result.message || result.error || 'Connection test failed'\n        message.error(`Connection test failed: ${errorMsg}`)\n        // Update connection status to disconnected\n        setConnections(connections.map(conn =>\n          conn.id === connection.id\n            ? { ...conn, status: 'disconnected' }\n            : conn\n        ))\n      }\n    } catch (error) {\n      console.error('Error testing connection:', error)\n      message.error('Failed to test connection')\n      setConnections(connections.map(conn =>\n        conn.id === connection.id\n          ? { ...conn, status: 'disconnected' }\n          : conn\n      ))\n    } finally {\n      setTestingConnection(null)\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text: string) => <strong>{text}</strong>,\n    },\n    {\n      title: 'Bootstrap Servers',\n      dataIndex: 'bootstrapServers',\n      key: 'bootstrapServers',\n      ellipsis: true,\n    },\n    {\n      title: 'Security Protocol',\n      dataIndex: 'securityProtocol',\n      key: 'securityProtocol',\n      render: (protocol: string) => (\n        <Tag color={protocol === 'PLAINTEXT' ? 'orange' : 'blue'}>\n          {protocol}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      render: (status: string | undefined, record: Connection) => {\n        // Use status if available, otherwise derive from active field\n        const actualStatus = status || (record.active ? 'active' : 'inactive')\n        const config = {\n          connected: { color: 'green', icon: <CheckCircleOutlined />, text: 'Connected' },\n          disconnected: { color: 'orange', icon: <ExclamationCircleOutlined />, text: 'Disconnected' },\n          error: { color: 'red', icon: <ExclamationCircleOutlined />, text: 'Error' },\n          active: { color: 'blue', icon: <CheckCircleOutlined />, text: 'Active' },\n          inactive: { color: 'default', icon: <ExclamationCircleOutlined />, text: 'Inactive' },\n        }[actualStatus] || { color: 'default', icon: null, text: actualStatus }\n\n        return (\n          <Tag color={config.color} icon={config.icon}>\n            {config.text}\n          </Tag>\n        )\n      },\n    },\n    {\n      title: 'Created',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n      render: (date: string) => new Date(date).toLocaleDateString(),\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      render: (_: any, record: Connection) => (\n        <Space>\n          <Button\n            type=\"link\"\n            icon={<EditOutlined />}\n            onClick={() => handleEdit(record)}\n          >\n            Edit\n          </Button>\n          <Button\n            type=\"link\"\n            loading={testingConnection === record.id}\n            onClick={() => handleTestConnection(record)}\n          >\n            Test\n          </Button>\n          <Button\n            type=\"link\"\n            danger\n            icon={<DeleteOutlined />}\n            onClick={() => handleDelete(record.id)}\n          >\n            Delete\n          </Button>\n        </Space>\n      ),\n    },\n  ]\n\n  const handleAdd = () => {\n    setEditingConnection(null)\n    form.resetFields()\n    setIsModalVisible(true)\n  }\n\n  const handleEdit = (connection: Connection) => {\n    setEditingConnection(connection)\n    form.setFieldsValue(connection)\n    setIsModalVisible(true)\n  }\n\n  const handleDelete = (id: string) => {\n    Modal.confirm({\n      title: 'Delete Connection',\n      content: 'Are you sure you want to delete this connection?',\n      onOk: async () => {\n        try {\n          const response = await fetch(`/api/v1/connections/${id}`, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          })\n\n          if (response.ok) {\n            message.success('Connection deleted successfully')\n            fetchConnections() // Refresh the list\n          } else {\n            message.error('Failed to delete connection')\n          }\n        } catch (error) {\n          console.error('Error deleting connection:', error)\n          message.error('Failed to delete connection')\n        }\n      },\n    })\n  }\n\n  const handleSubmit = async (values: any) => {\n    try {\n      if (editingConnection) {\n        // Update existing connection\n        const response = await fetch(`/api/v1/connections/${editingConnection.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(values),\n        })\n\n        if (response.ok) {\n          message.success('Connection updated successfully')\n          fetchConnections() // Refresh the list\n        } else {\n          message.error('Failed to update connection')\n        }\n      } else {\n        // Add new connection\n        const response = await fetch('/api/v1/connections', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(values),\n        })\n\n        if (response.ok) {\n          message.success('Connection added successfully')\n          fetchConnections() // Refresh the list\n        } else {\n          message.error('Failed to add connection')\n        }\n      }\n      setIsModalVisible(false)\n      form.resetFields()\n    } catch (error) {\n      console.error('Error saving connection:', error)\n      message.error('Failed to save connection')\n    }\n  }\n\n  return (\n    <div>\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 24 }}>\n        <Title level={2}>Kafka Connections</Title>\n        <Button type=\"primary\" icon={<PlusOutlined />} onClick={handleAdd}>\n          Add Connection\n        </Button>\n      </div>\n\n      <Card>\n        <Table\n          columns={columns}\n          dataSource={connections}\n          rowKey=\"id\"\n          pagination={{ pageSize: 10 }}\n          loading={loading}\n        />\n      </Card>\n\n      <Modal\n        title={editingConnection ? 'Edit Connection' : 'Add Connection'}\n        open={isModalVisible}\n        onCancel={() => setIsModalVisible(false)}\n        onOk={() => form.submit()}\n        width={600}\n      >\n        <Form\n          form={form}\n          layout=\"vertical\"\n          onFinish={handleSubmit}\n        >\n          <Form.Item\n            name=\"name\"\n            label=\"Connection Name\"\n            rules={[{ required: true, message: 'Please enter connection name' }]}\n          >\n            <Input placeholder=\"e.g., Production Cluster\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"bootstrapServers\"\n            label=\"Bootstrap Servers\"\n            rules={[{ required: true, message: 'Please enter bootstrap servers' }]}\n          >\n            <Input placeholder=\"e.g., kafka1:9092,kafka2:9092\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"securityProtocol\"\n            label=\"Security Protocol\"\n            rules={[{ required: true, message: 'Please select security protocol' }]}\n          >\n            <Select placeholder=\"Select security protocol\">\n              <Option value=\"PLAINTEXT\">PLAINTEXT</Option>\n              <Option value=\"SSL\">SSL</Option>\n              <Option value=\"SASL_PLAINTEXT\">SASL_PLAINTEXT</Option>\n              <Option value=\"SASL_SSL\">SASL_SSL</Option>\n            </Select>\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"default\" style={{ marginRight: 8 }}>\n              Test Connection\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Connections\n","import React, { useState, useEffect } from 'react'\nimport {\n  Card,\n  Table,\n  Button,\n  Input,\n  Space,\n  Typography,\n  Tag,\n  Modal,\n  Form,\n  InputNumber,\n  Select,\n  message,\n  Descriptions,\n  Tooltip,\n  Popconfirm\n} from 'antd'\nimport {\n  SearchOutlined,\n  EyeOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  PlusOutlined,\n  ReloadOutlined\n} from '@ant-design/icons'\n\nconst { Title } = Typography\nconst { Option } = Select\n\ninterface Connection {\n  id: number\n  name: string\n  bootstrapServers: string\n  active: boolean\n}\n\ninterface Topic {\n  name: string\n  partitionCount: number\n  replicationFactor: number\n  configs?: Record<string, string>\n}\n\ninterface TopicStats {\n  topic: string\n  partitionCount: number\n  totalMessages: number\n  partitionStats: Record<string, any>\n  timestamp: string\n}\n\nconst Topics: React.FC = () => {\n  const [topics, setTopics] = useState<Topic[]>([])\n  const [filteredTopics, setFilteredTopics] = useState<Topic[]>([])\n  const [connections, setConnections] = useState<Connection[]>([])\n  const [selectedConnection, setSelectedConnection] = useState<string>('')\n  const [loading, setLoading] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  // Modal states\n  const [viewModalVisible, setViewModalVisible] = useState(false)\n  const [editModalVisible, setEditModalVisible] = useState(false)\n  const [createModalVisible, setCreateModalVisible] = useState(false)\n  const [selectedTopic, setSelectedTopic] = useState<Topic | null>(null)\n  const [topicStats, setTopicStats] = useState<TopicStats | null>(null)\n\n  const [form] = Form.useForm()\n  const [editForm] = Form.useForm()\n\n  // Fetch connections on component mount\n  useEffect(() => {\n    fetchConnections()\n  }, [])\n\n  // Filter topics when search text changes\n  useEffect(() => {\n    if (searchText) {\n      const filtered = topics.filter(topic =>\n        topic.name.toLowerCase().includes(searchText.toLowerCase())\n      )\n      setFilteredTopics(filtered)\n    } else {\n      setFilteredTopics(topics)\n    }\n  }, [searchText, topics])\n\n  const fetchConnections = async () => {\n    try {\n      const response = await fetch('/api/v1/connections')\n      if (response.ok) {\n        const data = await response.json()\n        setConnections(data.filter((conn: Connection) => conn.active))\n      }\n    } catch (error) {\n      console.error('Error fetching connections:', error)\n    }\n  }\n\n  const fetchTopics = async (connectionId: string) => {\n    setLoading(true)\n    try {\n      const response = await fetch(`/api/v1/topics/connections/${connectionId}`)\n      if (response.ok) {\n        const data = await response.json()\n        setTopics(data)\n        setFilteredTopics(data)\n      } else {\n        message.error('Failed to fetch topics')\n      }\n    } catch (error) {\n      console.error('Error fetching topics:', error)\n      message.error('Failed to fetch topics')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const fetchTopicStats = async (connectionId: string, topicName: string) => {\n    try {\n      const response = await fetch(`/api/v1/topics/connections/${connectionId}/topics/${topicName}/stats`)\n      if (response.ok) {\n        const stats = await response.json()\n        setTopicStats(stats)\n      }\n    } catch (error) {\n      console.error('Error fetching topic stats:', error)\n    }\n  }\n\n  const handleConnectionChange = (connectionId: string) => {\n    setSelectedConnection(connectionId)\n    setTopics([])\n    setFilteredTopics([])\n    fetchTopics(connectionId)\n  }\n\n  const handleViewTopic = async (topic: Topic) => {\n    setSelectedTopic(topic)\n    setTopicStats(null)\n    setViewModalVisible(true)\n\n    if (selectedConnection) {\n      await fetchTopicStats(selectedConnection, topic.name)\n    }\n  }\n\n  const handleEditTopic = (topic: Topic) => {\n    setSelectedTopic(topic)\n    editForm.setFieldsValue({\n      name: topic.name,\n      partitionCount: topic.partitionCount,\n      replicationFactor: topic.replicationFactor\n    })\n    setEditModalVisible(true)\n  }\n\n  const handleCreateTopic = async (values: any) => {\n    try {\n      const response = await fetch(`/api/v1/topics/connections/${selectedConnection}/topics`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: values.name,\n          partitions: values.partitions,\n          replicationFactor: values.replicationFactor,\n          configs: values.configs || {}\n        }),\n      })\n\n      if (response.ok) {\n        message.success('Topic created successfully')\n        setCreateModalVisible(false)\n        form.resetFields()\n        fetchTopics(selectedConnection)\n      } else {\n        const error = await response.text()\n        message.error(`Failed to create topic: ${error}`)\n      }\n    } catch (error) {\n      console.error('Error creating topic:', error)\n      message.error('Failed to create topic')\n    }\n  }\n\n  const handleDeleteTopic = async (topicName: string) => {\n    try {\n      const response = await fetch(`/api/v1/topics/connections/${selectedConnection}/topics/${topicName}`, {\n        method: 'DELETE',\n      })\n\n      if (response.ok) {\n        message.success('Topic deleted successfully')\n        fetchTopics(selectedConnection)\n      } else {\n        const error = await response.text()\n        message.error(`Failed to delete topic: ${error}`)\n      }\n    } catch (error) {\n      console.error('Error deleting topic:', error)\n      message.error('Failed to delete topic')\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Topic Name',\n      dataIndex: 'name',\n      key: 'name',\n      sorter: (a: Topic, b: Topic) => a.name.localeCompare(b.name),\n      render: (name: string) => (\n        <span style={{ fontWeight: 'bold', color: '#1890ff' }}>{name}</span>\n      ),\n    },\n    {\n      title: 'Partitions',\n      dataIndex: 'partitionCount',\n      key: 'partitionCount',\n      width: 120,\n      sorter: (a: Topic, b: Topic) => a.partitionCount - b.partitionCount,\n      render: (count: number) => (\n        <Tag color=\"blue\">{count}</Tag>\n      ),\n    },\n    {\n      title: 'Replication Factor',\n      dataIndex: 'replicationFactor',\n      key: 'replicationFactor',\n      width: 150,\n      sorter: (a: Topic, b: Topic) => a.replicationFactor - b.replicationFactor,\n      render: (factor: number) => (\n        <Tag color=\"green\">{factor}</Tag>\n      ),\n    },\n\n    {\n      title: 'Actions',\n      key: 'actions',\n      width: 200,\n      render: (_: any, record: Topic) => (\n        <Space>\n          <Tooltip title=\"View Details\">\n            <Button\n              type=\"link\"\n              icon={<EyeOutlined />}\n              size=\"small\"\n              onClick={() => handleViewTopic(record)}\n            />\n          </Tooltip>\n          <Tooltip title=\"Edit Topic\">\n            <Button\n              type=\"link\"\n              icon={<EditOutlined />}\n              size=\"small\"\n              onClick={() => handleEditTopic(record)}\n            />\n          </Tooltip>\n          <Tooltip title=\"Delete Topic\">\n            <Popconfirm\n              title=\"Are you sure you want to delete this topic?\"\n              description=\"This action cannot be undone and will permanently delete all messages.\"\n              onConfirm={() => handleDeleteTopic(record.name)}\n              okText=\"Yes, Delete\"\n              cancelText=\"Cancel\"\n              okType=\"danger\"\n            >\n              <Button\n                type=\"link\"\n                icon={<DeleteOutlined />}\n                size=\"small\"\n                danger\n              />\n            </Popconfirm>\n          </Tooltip>\n        </Space>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <div style={{ marginBottom: 24 }}>\n        <Title level={2}>Topics Management</Title>\n      </div>\n\n      <Card>\n        <div style={{ marginBottom: 16, display: 'flex', gap: 16, alignItems: 'center', flexWrap: 'wrap' }}>\n          <div style={{ flex: 1, minWidth: 200 }}>\n            <Select\n              placeholder=\"Select Kafka connection\"\n              value={selectedConnection}\n              onChange={handleConnectionChange}\n              style={{ width: '100%' }}\n              showSearch\n              filterOption={(input, option) => {\n                const label = option?.label?.toString() || ''\n                const children = option?.children?.toString() || ''\n                return label.toLowerCase().includes(input.toLowerCase()) ||\n                       children.toLowerCase().includes(input.toLowerCase())\n              }}\n            >\n              {connections.map(connection => (\n                <Option key={connection.id} value={connection.id.toString()}>\n                  {connection.name} ({connection.bootstrapServers})\n                </Option>\n              ))}\n            </Select>\n          </div>\n\n          <div style={{ flex: 1, minWidth: 200 }}>\n            <Input\n              placeholder=\"Search topics...\"\n              prefix={<SearchOutlined />}\n              value={searchText}\n              onChange={(e) => setSearchText(e.target.value)}\n              allowClear\n            />\n          </div>\n\n          <Space>\n            <Button\n              type=\"primary\"\n              icon={<PlusOutlined />}\n              onClick={() => setCreateModalVisible(true)}\n              disabled={!selectedConnection}\n            >\n              Create Topic\n            </Button>\n            <Button\n              icon={<ReloadOutlined />}\n              onClick={() => selectedConnection && fetchTopics(selectedConnection)}\n              disabled={!selectedConnection}\n            >\n              Refresh\n            </Button>\n          </Space>\n        </div>\n\n        <Table\n          columns={columns}\n          dataSource={filteredTopics}\n          rowKey=\"name\"\n          loading={loading}\n          pagination={{\n            pageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} topics`,\n          }}\n          scroll={{ x: 800 }}\n        />\n      </Card>\n\n      {/* View Topic Modal */}\n      <Modal\n        title=\"Topic Details\"\n        open={viewModalVisible}\n        onCancel={() => setViewModalVisible(false)}\n        footer={[\n          <Button key=\"close\" onClick={() => setViewModalVisible(false)}>\n            Close\n          </Button>\n        ]}\n        width={800}\n      >\n        {selectedTopic && (\n          <div>\n            <Descriptions bordered column={2}>\n              <Descriptions.Item label=\"Topic Name\">{selectedTopic.name}</Descriptions.Item>\n              <Descriptions.Item label=\"Partitions\">{selectedTopic.partitionCount}</Descriptions.Item>\n              <Descriptions.Item label=\"Replication Factor\">{selectedTopic.replicationFactor}</Descriptions.Item>\n              <Descriptions.Item label=\"Total Messages\">\n                {topicStats ? topicStats.totalMessages.toLocaleString() : 'Loading...'}\n              </Descriptions.Item>\n            </Descriptions>\n\n            {topicStats && (\n              <div style={{ marginTop: 16 }}>\n                <Title level={4}>Partition Details</Title>\n                <Table\n                  dataSource={Object.entries(topicStats.partitionStats).map(([partition, stats]: [string, any]) => ({\n                    partition: parseInt(partition),\n                    earliestOffset: stats.earliestOffset,\n                    latestOffset: stats.latestOffset,\n                    messageCount: stats.messageCount\n                  }))}\n                  columns={[\n                    { title: 'Partition', dataIndex: 'partition', key: 'partition' },\n                    { title: 'Earliest Offset', dataIndex: 'earliestOffset', key: 'earliestOffset' },\n                    { title: 'Latest Offset', dataIndex: 'latestOffset', key: 'latestOffset' },\n                    { title: 'Message Count', dataIndex: 'messageCount', key: 'messageCount', render: (count: number) => count.toLocaleString() }\n                  ]}\n                  pagination={false}\n                  size=\"small\"\n                />\n              </div>\n            )}\n          </div>\n        )}\n      </Modal>\n\n      {/* Create Topic Modal */}\n      <Modal\n        title=\"Create New Topic\"\n        open={createModalVisible}\n        onCancel={() => {\n          setCreateModalVisible(false)\n          form.resetFields()\n        }}\n        onOk={() => form.submit()}\n        confirmLoading={loading}\n      >\n        <Form\n          form={form}\n          layout=\"vertical\"\n          onFinish={handleCreateTopic}\n        >\n          <Form.Item\n            name=\"name\"\n            label=\"Topic Name\"\n            rules={[{ required: true, message: 'Please enter topic name' }]}\n          >\n            <Input placeholder=\"Enter topic name\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"partitions\"\n            label=\"Number of Partitions\"\n            rules={[{ required: true, message: 'Please enter number of partitions' }]}\n            initialValue={3}\n          >\n            <InputNumber min={1} max={1000} style={{ width: '100%' }} />\n          </Form.Item>\n\n          <Form.Item\n            name=\"replicationFactor\"\n            label=\"Replication Factor\"\n            rules={[{ required: true, message: 'Please enter replication factor' }]}\n            initialValue={1}\n          >\n            <InputNumber min={1} max={10} style={{ width: '100%' }} />\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      {/* Edit Topic Modal */}\n      <Modal\n        title=\"Edit Topic\"\n        open={editModalVisible}\n        onCancel={() => setEditModalVisible(false)}\n        footer={[\n          <Button key=\"cancel\" onClick={() => setEditModalVisible(false)}>\n            Cancel\n          </Button>,\n          <Button key=\"save\" type=\"primary\" disabled>\n            Save Changes (Coming Soon)\n          </Button>\n        ]}\n      >\n        <Form\n          form={editForm}\n          layout=\"vertical\"\n        >\n          <Form.Item name=\"name\" label=\"Topic Name\">\n            <Input disabled />\n          </Form.Item>\n\n          <Form.Item name=\"partitionCount\" label=\"Partitions\">\n            <InputNumber disabled style={{ width: '100%' }} />\n          </Form.Item>\n\n          <Form.Item name=\"replicationFactor\" label=\"Replication Factor\">\n            <InputNumber disabled style={{ width: '100%' }} />\n          </Form.Item>\n\n          <div style={{ padding: 16, backgroundColor: '#f0f0f0', borderRadius: 4 }}>\n            <strong>Note:</strong> Topic editing functionality will be available when authentication is implemented.\n          </div>\n        </Form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Topics\n","import React, { useState, useEffect } from 'react'\nimport { Typography, Card, Select, message, Form, Input, Button, Space, Table, Tag, InputNumber, Tooltip } from 'antd'\nimport { PlayCircleOutlined, PauseCircleOutlined, StopOutlined, CopyOutlined, DownloadOutlined } from '@ant-design/icons'\n// import { useAuthStore } from '../stores/authStore' // Removed for development\n\nconst { Title } = Typography\nconst { Option } = Select\n\ninterface Connection {\n  id: string\n  name: string\n  active: boolean\n}\n\nconst Consumers: React.FC = () => {\n  const [connections, setConnections] = useState<Connection[]>([])\n  const [topics, setTopics] = useState<any[]>([])\n  const [selectedConnection, setSelectedConnection] = useState<string | undefined>(undefined)\n  const [selectedTopic, setSelectedTopic] = useState<string>('')\n  const [loading, setLoading] = useState(false)\n  const [consumerMessages, setConsumerMessages] = useState<any[]>([])\n  const [consumerStatus, setConsumerStatus] = useState<'stopped' | 'running' | 'paused'>('stopped')\n  const [currentSessionId, setCurrentSessionId] = useState<string | null>(null)\n  const [pollingInterval, setPollingInterval] = useState<NodeJS.Timeout | null>(null)\n  // const { token } = useAuthStore() // Removed for development\n\n  // Fetch connections on component mount\n  useEffect(() => {\n    fetchConnections()\n  }, [])\n\n  const fetchConnections = async () => {\n    try {\n      const response = await fetch('/api/v1/connections', {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n\n      if (response.ok) {\n        const data = await response.json()\n        setConnections(data.filter((conn: Connection) => conn.active))\n      }\n    } catch (error) {\n      console.error('Error fetching connections:', error)\n    }\n  }\n\n  const fetchTopics = async (connectionId: string) => {\n    try {\n      setLoading(true)\n      const response = await fetch(`/api/v1/topics/connections/${connectionId}`, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n\n      if (response.ok) {\n        const data = await response.json()\n        setTopics(data)\n      } else {\n        message.error('Failed to fetch topics')\n      }\n    } catch (error) {\n      console.error('Error fetching topics:', error)\n      message.error('Failed to fetch topics')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n\n\n  const handleConnectionChange = (connectionId: string) => {\n    setSelectedConnection(connectionId)\n    setSelectedTopic('')\n    setTopics([])\n    fetchTopics(connectionId)\n  }\n\n  const handleStartConsumer = async (values: any) => {\n    setLoading(true)\n    try {\n      const consumerData = {\n        connectionId: selectedConnection,\n        topic: selectedTopic,\n        consumerGroup: values.consumerGroup,\n        partition: values.partition,\n        startOffset: values.startOffset === 'specific' ? values.specificOffset : null,\n        maxMessages: values.maxMessages,\n        autoCommit: true,\n        pollTimeoutMs: 1000\n      }\n\n      // Create consumer session\n      const response = await fetch('/api/v1/consumer/sessions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(consumerData),\n      })\n\n      if (response.ok) {\n        const session = await response.json()\n        setCurrentSessionId(session.sessionId)\n\n        // Start the consumer\n        const startResponse = await fetch(`/api/v1/consumer/sessions/${session.sessionId}/start`, {\n          method: 'POST',\n        })\n\n        if (startResponse.ok) {\n          setConsumerStatus('running')\n          message.success('Consumer started successfully')\n          // Start polling for messages\n          startMessagePolling(session.sessionId)\n        } else {\n          message.error('Failed to start consumer')\n        }\n      } else {\n        message.error('Failed to create consumer session')\n      }\n    } catch (error) {\n      console.error('Error starting consumer:', error)\n      message.error('Failed to start consumer')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handlePauseConsumer = async () => {\n    if (!currentSessionId) return\n\n    try {\n      const response = await fetch(`/api/v1/consumer/sessions/${currentSessionId}/pause`, {\n        method: 'POST',\n      })\n\n      if (response.ok) {\n        setConsumerStatus('paused')\n        message.success('Consumer paused')\n      } else {\n        message.error('Failed to pause consumer')\n      }\n    } catch (error) {\n      console.error('Error pausing consumer:', error)\n      message.error('Failed to pause consumer')\n    }\n  }\n\n  const handleStopConsumer = async () => {\n    if (!currentSessionId) return\n\n    try {\n      // Stop polling\n      stopMessagePolling()\n\n      const response = await fetch(`/api/v1/consumer/sessions/${currentSessionId}/stop`, {\n        method: 'POST',\n      })\n\n      if (response.ok) {\n        setConsumerStatus('stopped')\n        setCurrentSessionId(null)\n        message.success('Consumer stopped')\n      } else {\n        message.error('Failed to stop consumer')\n      }\n    } catch (error) {\n      console.error('Error stopping consumer:', error)\n      message.error('Failed to stop consumer')\n    }\n  }\n\n  const startMessagePolling = (sessionId: string) => {\n    // Clear any existing polling\n    stopMessagePolling()\n\n    const interval = setInterval(async () => {\n      try {\n        // Check session status first\n        const sessionResponse = await fetch(`/api/v1/consumer/sessions/${sessionId}`)\n        if (sessionResponse.ok) {\n          const session = await sessionResponse.json()\n\n          // If session is stopped or finished, get final messages and stop polling\n          if (session.status === 'STOPPED' || session.finished) {\n            const messagesResponse = await fetch(`/api/v1/consumer/sessions/${sessionId}/messages`)\n            if (messagesResponse.ok) {\n              const messages = await messagesResponse.json()\n              setConsumerMessages(messages)\n            }\n            setConsumerStatus('stopped')\n            stopMessagePolling()\n            return\n          }\n\n          // Otherwise get current messages\n          const messagesResponse = await fetch(`/api/v1/consumer/sessions/${sessionId}/messages`)\n          if (messagesResponse.ok) {\n            const messages = await messagesResponse.json()\n            setConsumerMessages(messages)\n          }\n        }\n      } catch (error) {\n        console.error('Error polling messages:', error)\n      }\n    }, 1000) // Poll every 1 second for more responsive updates\n\n    setPollingInterval(interval)\n  }\n\n  const stopMessagePolling = () => {\n    if (pollingInterval) {\n      clearInterval(pollingInterval)\n      setPollingInterval(null)\n    }\n  }\n\n  // Cleanup polling on component unmount\n  useEffect(() => {\n    return () => {\n      stopMessagePolling()\n    }\n  }, [])\n\n  const handleCopyMessages = () => {\n    const messagesText = consumerMessages.map(msg =>\n      `Topic: ${msg.topic}\\nPartition: ${msg.partition}\\nOffset: ${msg.offset}\\nKey: ${msg.key || 'null'}\\nValue: ${msg.value}\\nTimestamp: ${msg.timestamp}\\n---`\n    ).join('\\n')\n\n    navigator.clipboard.writeText(messagesText)\n    message.success(`Copied ${consumerMessages.length} messages to clipboard`)\n  }\n\n  const handleDownloadMessages = () => {\n    const dataStr = JSON.stringify(consumerMessages, null, 2)\n    const dataBlob = new Blob([dataStr], { type: 'application/json' })\n    const url = URL.createObjectURL(dataBlob)\n    const link = document.createElement('a')\n    link.href = url\n    link.download = `kafka-messages-${selectedTopic}-${new Date().toISOString().split('T')[0]}.json`\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n    URL.revokeObjectURL(url)\n    message.success(`Downloaded ${consumerMessages.length} messages`)\n  }\n\n  const messageColumns = [\n    {\n      title: 'Partition',\n      dataIndex: 'partition',\n      key: 'partition',\n      width: 80,\n      render: (partition: number) => <Tag color=\"blue\">{partition}</Tag>,\n    },\n    {\n      title: 'Offset',\n      dataIndex: 'offset',\n      key: 'offset',\n      width: 100,\n      render: (offset: number) => offset?.toLocaleString(),\n    },\n    {\n      title: 'Key',\n      dataIndex: 'key',\n      key: 'key',\n      width: 120,\n      ellipsis: true,\n      render: (key: string) => key || '<null>',\n    },\n    {\n      title: 'Value',\n      dataIndex: 'value',\n      key: 'value',\n      ellipsis: true,\n      render: (value: string) => (\n        <span style={{ fontFamily: 'monospace', fontSize: '12px' }}>\n          {value && value.length > 100 ? `${value.substring(0, 100)}...` : value || '<null>'}\n        </span>\n      ),\n    },\n    {\n      title: 'Timestamp',\n      dataIndex: 'timestamp',\n      key: 'timestamp',\n      width: 160,\n      render: (timestamp: string) => timestamp ? new Date(timestamp).toLocaleString() : 'N/A',\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      width: 80,\n      render: (_: any, record: any) => (\n        <Tooltip title=\"Copy message\">\n          <Button\n            type=\"link\"\n            icon={<CopyOutlined />}\n            size=\"small\"\n            onClick={() => {\n              const messageText = `Topic: ${record.topic}\\nPartition: ${record.partition}\\nOffset: ${record.offset}\\nKey: ${record.key || 'null'}\\nValue: ${record.value}\\nTimestamp: ${record.timestamp}`\n              navigator.clipboard.writeText(messageText)\n              message.success('Message copied to clipboard!')\n            }}\n          />\n        </Tooltip>\n      ),\n    },\n  ]\n\n  return (\n    <div>\n      <div style={{ marginBottom: 24 }}>\n        <Title level={2}>Message Consumer</Title>\n      </div>\n\n      <Card>\n        <div style={{ marginBottom: 16, display: 'flex', gap: 16 }}>\n          <Select\n            placeholder=\"Select a Kafka connection\"\n            style={{ width: 300 }}\n            value={selectedConnection}\n            onChange={handleConnectionChange}\n            showSearch\n            filterOption={(input, option) => {\n              const label = option?.label?.toString() || ''\n              const children = option?.children?.toString() || ''\n              return label.toLowerCase().includes(input.toLowerCase()) ||\n                     children.toLowerCase().includes(input.toLowerCase())\n            }}\n          >\n            {connections.map(connection => (\n              <Option key={connection.id} value={connection.id}>\n                {connection.name}\n              </Option>\n            ))}\n          </Select>\n\n          <Select\n            placeholder=\"Select a topic\"\n            style={{ width: 300 }}\n            value={selectedTopic}\n            onChange={setSelectedTopic}\n            disabled={!selectedConnection || topics.length === 0}\n            showSearch\n            filterOption={(input, option) => {\n              const label = option?.label?.toString() || ''\n              const children = option?.children?.toString() || ''\n              return label.toLowerCase().includes(input.toLowerCase()) ||\n                     children.toLowerCase().includes(input.toLowerCase())\n            }}\n          >\n            {topics.map(topic => (\n              <Option key={topic.name} value={topic.name}>\n                {topic.name} ({topic.partitionCount} partitions)\n              </Option>\n            ))}\n          </Select>\n        </div>\n\n        {selectedTopic && (\n          <div style={{ marginTop: 24 }}>\n            <Title level={4}>Consumer Configuration for: {selectedTopic}</Title>\n            <Form\n              layout=\"vertical\"\n              style={{ maxWidth: 600 }}\n              onFinish={handleStartConsumer}\n              initialValues={{\n                consumerGroup: 'kafka-web-app-consumer',\n                startOffset: 'latest',\n                maxMessages: 100\n              }}\n            >\n              <Form.Item\n                label=\"Consumer Group ID\"\n                name=\"consumerGroup\"\n                rules={[{ required: true, message: 'Please enter consumer group ID' }]}\n              >\n                <Input placeholder=\"kafka-web-app-consumer\" />\n              </Form.Item>\n\n              <Form.Item label=\"Partition (optional)\" name=\"partition\">\n                <Select placeholder=\"Select partition (leave empty for all partitions)\" allowClear>\n                  {Array.from({ length: topics.find(t => t.name === selectedTopic)?.partitionCount || 0 }, (_, i) => (\n                    <Option key={i} value={i}>Partition {i}</Option>\n                  ))}\n                </Select>\n              </Form.Item>\n\n              <Form.Item label=\"Start Offset\" name=\"startOffset\">\n                <Select defaultValue=\"latest\" placeholder=\"Select start offset\">\n                  <Option value=\"earliest\">Earliest</Option>\n                  <Option value=\"latest\">Latest</Option>\n                  <Option value=\"specific\">Specific Offset</Option>\n                </Select>\n              </Form.Item>\n\n              <Form.Item label=\"Max Messages\" name=\"maxMessages\">\n                <InputNumber\n                  min={1}\n                  max={10000}\n                  placeholder=\"Maximum messages to consume\"\n                  style={{ width: '100%' }}\n                />\n              </Form.Item>\n\n              <Form.Item>\n                <Space>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    loading={loading}\n                    disabled={consumerStatus === 'running'}\n                    icon={<PlayCircleOutlined />}\n                  >\n                    Start Consumer\n                  </Button>\n                  <Button\n                    onClick={handlePauseConsumer}\n                    disabled={consumerStatus !== 'running'}\n                    icon={<PauseCircleOutlined />}\n                  >\n                    Pause\n                  </Button>\n                  <Button\n                    onClick={handleStopConsumer}\n                    disabled={consumerStatus === 'stopped'}\n                    icon={<StopOutlined />}\n                    danger\n                  >\n                    Stop\n                  </Button>\n                </Space>\n              </Form.Item>\n\n              <Form.Item>\n                <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\n                  <span>Status:</span>\n                  <Tag color={consumerStatus === 'running' ? 'green' : consumerStatus === 'paused' ? 'orange' : 'default'}>\n                    {consumerStatus.toUpperCase()}\n                  </Tag>\n                  {currentSessionId && (\n                    <span style={{ fontSize: '12px', color: '#666' }}>\n                      Session: {currentSessionId.substring(0, 8)}...\n                    </span>\n                  )}\n                </div>\n              </Form.Item>\n            </Form>\n\n            {consumerMessages.length > 0 && (\n              <div style={{ marginTop: 24 }}>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 16 }}>\n                  <Title level={4}>Consumed Messages ({consumerMessages.length})</Title>\n                  <Space>\n                    <Tooltip title=\"Copy all messages to clipboard\">\n                      <Button\n                        icon={<CopyOutlined />}\n                        onClick={handleCopyMessages}\n                        size=\"small\"\n                      >\n                        Copy All\n                      </Button>\n                    </Tooltip>\n                    <Tooltip title=\"Download messages as JSON file\">\n                      <Button\n                        icon={<DownloadOutlined />}\n                        onClick={handleDownloadMessages}\n                        size=\"small\"\n                      >\n                        Download\n                      </Button>\n                    </Tooltip>\n                    <Button\n                      onClick={() => setConsumerMessages([])}\n                      size=\"small\"\n                      danger\n                    >\n                      Clear\n                    </Button>\n                  </Space>\n                </div>\n\n                <Table\n                  dataSource={consumerMessages}\n                  columns={messageColumns}\n                  rowKey={(record) => `${record.partition}-${record.offset}`}\n                  pagination={{ pageSize: 20 }}\n                  scroll={{ x: 1000 }}\n                  size=\"small\"\n                />\n              </div>\n            )}\n          </div>\n        )}\n      </Card>\n    </div>\n  )\n}\n\nexport default Consumers\n","import React, { useState, useEffect } from 'react'\nimport { Typography, Card, Form, Input, Select, Button, message, Space, Tabs, InputNumber, Upload } from 'antd'\nimport { SendOutlined, UploadOutlined } from '@ant-design/icons'\n// import { useAuthStore } from '../stores/authStore' // Removed for development\n\nconst { Title } = Typography\nconst { TextArea } = Input\nconst { Option } = Select\nconst { TabPane } = Tabs\n\ninterface Connection {\n  id: string\n  name: string\n  active: boolean\n}\n\nconst Producers: React.FC = () => {\n  const [form] = Form.useForm()\n  const [loading, setLoading] = useState(false)\n  const [connections, setConnections] = useState<Connection[]>([])\n  const [selectedConnection, setSelectedConnection] = useState<string | undefined>(undefined)\n  const [topics, setTopics] = useState<any[]>([])\n  const [uploadedFile, setUploadedFile] = useState<File | null>(null)\n  // const { token } = useAuthStore() // Removed for development\n\n  // Fetch connections on component mount\n  useEffect(() => {\n    fetchConnections()\n  }, [])\n\n  const fetchConnections = async () => {\n    try {\n      const response = await fetch('/api/v1/connections', {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n\n      if (response.ok) {\n        const data = await response.json()\n        setConnections(data.filter((conn: Connection) => conn.active))\n      }\n    } catch (error) {\n      console.error('Error fetching connections:', error)\n    }\n  }\n\n  const fetchTopics = async (connectionId: string) => {\n    try {\n      const response = await fetch(`/api/v1/topics/connections/${connectionId}`, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n\n      if (response.ok) {\n        const data = await response.json()\n        setTopics(data)\n      }\n    } catch (error) {\n      console.error('Error fetching topics:', error)\n    }\n  }\n\n  const handleConnectionChange = (connectionId: string) => {\n    setSelectedConnection(connectionId)\n    fetchTopics(connectionId)\n    form.setFieldsValue({ topic: undefined }) // Reset topic selection\n  }\n\n  const handleBulkConnectionChange = (connectionId: string) => {\n    fetchTopics(connectionId)\n  }\n\n  const handleFileConnectionChange = (connectionId: string) => {\n    fetchTopics(connectionId)\n  }\n\n  const handleSend = async (values: any) => {\n    setLoading(true)\n    try {\n      const messageData = {\n        topic: values.topic,\n        key: values.key || null,\n        value: values.message,\n        partition: values.partition || null,\n        headers: values.headers ? JSON.parse(values.headers) : null\n      }\n\n      const response = await fetch(`/api/v1/producer/connections/${values.connection}/send`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(messageData),\n      })\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n\n      const result = await response.json()\n      console.log('Message sent successfully:', result)\n      message.success('Message sent successfully!')\n      form.resetFields()\n    } catch (error) {\n      console.error('Failed to send message:', error)\n      message.error('Failed to send message')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleBulkSend = async (values: any) => {\n    setLoading(true)\n    try {\n      const { bulkConnection, bulkTopic, messageCount, bulkMessages } = values\n      const template = bulkMessages\n\n      for (let i = 1; i <= messageCount; i++) {\n        const messageContent = template\n          .replace(/\\{\\{index\\}\\}/g, i.toString())\n          .replace(/\\{\\{timestamp\\}\\}/g, new Date().toISOString())\n\n        const messageData = {\n          topic: bulkTopic,\n          key: `bulk-message-${i}`,\n          value: messageContent\n        }\n\n        const response = await fetch(`/api/v1/producer/connections/${bulkConnection}/send`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(messageData),\n        })\n\n        if (!response.ok) {\n          throw new Error(`Failed to send message ${i}`)\n        }\n      }\n\n      message.success(`Successfully sent ${messageCount} messages`)\n    } catch (error) {\n      console.error('Error sending bulk messages:', error)\n      message.error('Failed to send bulk messages')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleFileUpload = async (values: any) => {\n    if (!uploadedFile) {\n      message.error('Please upload a file first')\n      return\n    }\n\n    setLoading(true)\n    try {\n      const { fileConnection, fileTopic } = values\n      const fileContent = await uploadedFile.text()\n      const lines = fileContent.split('\\n').filter(line => line.trim())\n\n      for (let i = 0; i < lines.length; i++) {\n        const messageData = {\n          topic: fileTopic,\n          key: `file-message-${i + 1}`,\n          value: lines[i].trim()\n        }\n\n        const response = await fetch(`/api/v1/producer/connections/${fileConnection}/send`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(messageData),\n        })\n\n        if (!response.ok) {\n          throw new Error(`Failed to send message ${i + 1}`)\n        }\n      }\n\n      message.success(`Successfully sent ${lines.length} messages from file`)\n      setUploadedFile(null)\n    } catch (error) {\n      console.error('Error sending file messages:', error)\n      message.error('Failed to send messages from file')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleFileChange = (info: any) => {\n    const file = info.file\n    if (file) {\n      setUploadedFile(file)\n      message.success(`${file.name} file uploaded successfully`)\n    }\n  }\n\n  return (\n    <div>\n      <div style={{ marginBottom: 24 }}>\n        <Title level={2}>Message Producer</Title>\n      </div>\n\n      <Card title=\"Send Message\" className=\"producer-form\">\n        <Form\n          form={form}\n          layout=\"vertical\"\n          onFinish={handleSend}\n        >\n          <Form.Item\n            name=\"connection\"\n            label=\"Kafka Connection\"\n            rules={[{ required: true, message: 'Please select a connection' }]}\n          >\n            <Select\n              placeholder=\"Select Kafka connection\"\n              value={selectedConnection}\n              onChange={handleConnectionChange}\n              showSearch\n              filterOption={(input, option) => {\n                const label = option?.label?.toString() || ''\n                const children = option?.children?.toString() || ''\n                return label.toLowerCase().includes(input.toLowerCase()) ||\n                       children.toLowerCase().includes(input.toLowerCase())\n              }}\n            >\n              {connections.map(connection => (\n                <Option key={connection.id} value={connection.id}>\n                  {connection.name}\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            name=\"topic\"\n            label=\"Topic\"\n            rules={[{ required: true, message: 'Please select a topic' }]}\n          >\n            <Select\n              placeholder=\"Select topic\"\n              disabled={!selectedConnection}\n              showSearch\n              filterOption={(input, option) => {\n                const label = option?.label?.toString() || ''\n                const children = option?.children?.toString() || ''\n                return label.toLowerCase().includes(input.toLowerCase()) ||\n                       children.toLowerCase().includes(input.toLowerCase())\n              }}\n            >\n              {topics.map(topic => (\n                <Option key={topic.name} value={topic.name}>\n                  {topic.name} ({topic.partitionCount} partitions)\n                </Option>\n              ))}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            name=\"key\"\n            label=\"Message Key (Optional)\"\n          >\n            <Input placeholder=\"Enter message key\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"headers\"\n            label=\"Headers (Optional)\"\n          >\n            <TextArea\n              placeholder=\"Enter headers as JSON (e.g., {'userId': '123', 'source': 'web'})\"\n              rows={3}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"message\"\n            label=\"Message\"\n            rules={[{ required: true, message: 'Please enter message content' }]}\n          >\n            <TextArea\n              placeholder=\"Enter your message content (JSON, text, etc.)\"\n              rows={8}\n              className=\"message-input\"\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Space>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                loading={loading}\n                icon={<SendOutlined />}\n              >\n                Send Message\n              </Button>\n              <Button onClick={() => form.resetFields()}>\n                Clear\n              </Button>\n            </Space>\n          </Form.Item>\n        </Form>\n      </Card>\n\n      <Card title=\"Bulk Message Production\" style={{ marginTop: 24 }}>\n        <Tabs defaultActiveKey=\"1\">\n          <TabPane tab=\"Multiple Messages\" key=\"1\">\n            <Form layout=\"vertical\" onFinish={handleBulkSend}>\n              <Form.Item\n                name=\"bulkConnection\"\n                label=\"Kafka Connection\"\n                rules={[{ required: true, message: 'Please select a connection' }]}\n              >\n                <Select\n                  placeholder=\"Select Kafka connection\"\n                  onChange={handleBulkConnectionChange}\n                  showSearch\n                  filterOption={(input, option) => {\n                    const label = option?.label?.toString() || ''\n                    const children = option?.children?.toString() || ''\n                    return label.toLowerCase().includes(input.toLowerCase()) ||\n                           children.toLowerCase().includes(input.toLowerCase())\n                  }}\n                >\n                  {connections.map(connection => (\n                    <Option key={connection.id} value={connection.id}>\n                      {connection.name}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                name=\"bulkTopic\"\n                label=\"Topic\"\n                rules={[{ required: true, message: 'Please select a topic' }]}\n              >\n                <Select\n                  placeholder=\"Select topic\"\n                  showSearch\n                  filterOption={(input, option) => {\n                    const label = option?.label?.toString() || ''\n                    const children = option?.children?.toString() || ''\n                    return label.toLowerCase().includes(input.toLowerCase()) ||\n                           children.toLowerCase().includes(input.toLowerCase())\n                  }}\n                >\n                  {topics.map(topic => (\n                    <Option key={topic.name} value={topic.name}>\n                      {topic.name} ({topic.partitionCount} partitions)\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                name=\"messageCount\"\n                label=\"Number of Messages\"\n                rules={[{ required: true, message: 'Please enter number of messages' }]}\n              >\n                <InputNumber min={1} max={1000} defaultValue={10} style={{ width: '100%' }} />\n              </Form.Item>\n\n              <Form.Item\n                name=\"bulkMessages\"\n                label=\"Message Template (use {{index}} for message number)\"\n                rules={[{ required: true, message: 'Please enter message template' }]}\n              >\n                <TextArea\n                  placeholder='{\"id\": {{index}}, \"message\": \"Test message {{index}}\", \"timestamp\": \"{{timestamp}}\"}'\n                  rows={6}\n                />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  loading={loading}\n                  icon={<SendOutlined />}\n                >\n                  Send Bulk Messages\n                </Button>\n              </Form.Item>\n            </Form>\n          </TabPane>\n\n          <TabPane tab=\"File Upload\" key=\"2\">\n            <Form layout=\"vertical\" onFinish={handleFileUpload}>\n              <Form.Item\n                name=\"fileConnection\"\n                label=\"Kafka Connection\"\n                rules={[{ required: true, message: 'Please select a connection' }]}\n              >\n                <Select\n                  placeholder=\"Select Kafka connection\"\n                  onChange={handleFileConnectionChange}\n                  showSearch\n                  filterOption={(input, option) => {\n                    const label = option?.label?.toString() || ''\n                    const children = option?.children?.toString() || ''\n                    return label.toLowerCase().includes(input.toLowerCase()) ||\n                           children.toLowerCase().includes(input.toLowerCase())\n                  }}\n                >\n                  {connections.map(connection => (\n                    <Option key={connection.id} value={connection.id}>\n                      {connection.name}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                name=\"fileTopic\"\n                label=\"Topic\"\n                rules={[{ required: true, message: 'Please select a topic' }]}\n              >\n                <Select\n                  placeholder=\"Select topic\"\n                  showSearch\n                  filterOption={(input, option) => {\n                    const label = option?.label?.toString() || ''\n                    const children = option?.children?.toString() || ''\n                    return label.toLowerCase().includes(input.toLowerCase()) ||\n                           children.toLowerCase().includes(input.toLowerCase())\n                  }}\n                >\n                  {topics.map(topic => (\n                    <Option key={topic.name} value={topic.name}>\n                      {topic.name} ({topic.partitionCount} partitions)\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                name=\"messageFile\"\n                label=\"Upload Messages File\"\n                rules={[{ required: true, message: 'Please upload a file' }]}\n              >\n                <Upload.Dragger\n                  name=\"file\"\n                  multiple={false}\n                  accept=\".json,.txt,.csv\"\n                  beforeUpload={() => false}\n                  onChange={handleFileChange}\n                >\n                  <p className=\"ant-upload-drag-icon\">\n                    <UploadOutlined />\n                  </p>\n                  <p className=\"ant-upload-text\">Click or drag file to upload</p>\n                  <p className=\"ant-upload-hint\">\n                    Support JSON, TXT, or CSV files. Each line should be a separate message.\n                  </p>\n                </Upload.Dragger>\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  loading={loading}\n                  icon={<SendOutlined />}\n                  disabled={!uploadedFile}\n                >\n                  Send Messages from File\n                </Button>\n              </Form.Item>\n            </Form>\n          </TabPane>\n        </Tabs>\n      </Card>\n    </div>\n  )\n}\n\nexport default Producers\n","import React, { useState, useEffect } from 'react'\nimport { Typography, Card, Form, Select, Button, Table, Tag, Space, message } from 'antd'\nimport { SearchOutlined, EyeOutlined } from '@ant-design/icons'\n\nconst { Title } = Typography\nconst { Option } = Select\n\ninterface Connection {\n  id: string\n  name: string\n  active: boolean\n}\n\nconst Messages: React.FC = () => {\n  const [form] = Form.useForm()\n  const [loading, setLoading] = useState(false)\n  const [messages, setMessages] = useState<any[]>([])\n  const [connections, setConnections] = useState<Connection[]>([])\n  const [topics, setTopics] = useState<any[]>([])\n  const [selectedConnection, setSelectedConnection] = useState<string>('')\n  const [selectedTopicStats, setSelectedTopicStats] = useState<any>(null)\n\n  // Fetch connections on component mount\n  useEffect(() => {\n    fetchConnections()\n  }, [])\n\n  const fetchConnections = async () => {\n    try {\n      const response = await fetch('/api/v1/connections', {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n\n      if (response.ok) {\n        const data = await response.json()\n        setConnections(data.filter((conn: Connection) => conn.active))\n      } else {\n        message.error('Failed to fetch connections')\n      }\n    } catch (error) {\n      console.error('Error fetching connections:', error)\n      message.error('Failed to fetch connections')\n    }\n  }\n\n  const fetchTopics = async (connectionId: string) => {\n    try {\n      setLoading(true)\n      const response = await fetch(`/api/v1/topics/connections/${connectionId}`, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n\n      if (response.ok) {\n        const data = await response.json()\n        setTopics(data)\n      } else {\n        message.error('Failed to fetch topics')\n      }\n    } catch (error) {\n      console.error('Error fetching topics:', error)\n      message.error('Failed to fetch topics')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleConnectionChange = (connectionId: string) => {\n    setSelectedConnection(connectionId)\n    setTopics([])\n    setSelectedTopicStats(null)\n    form.setFieldsValue({ topic: undefined })\n    fetchTopics(connectionId)\n  }\n\n  const fetchTopicStats = async (connectionId: string, topicName: string) => {\n    try {\n      const response = await fetch(`/api/v1/topics/connections/${connectionId}/topics/${topicName}/stats`)\n      if (response.ok) {\n        const stats = await response.json()\n        setSelectedTopicStats(stats)\n      }\n    } catch (error) {\n      console.error('Error fetching topic stats:', error)\n    }\n  }\n\n  const handleTopicChange = (topicName: string) => {\n    if (selectedConnection && topicName) {\n      fetchTopicStats(selectedConnection, topicName)\n    }\n  }\n\n  const columns = [\n    {\n      title: 'Offset',\n      dataIndex: 'offset',\n      key: 'offset',\n      width: 100,\n    },\n    {\n      title: 'Partition',\n      dataIndex: 'partition',\n      key: 'partition',\n      width: 100,\n      render: (partition: number) => (\n        <Tag color=\"blue\">{partition}</Tag>\n      ),\n    },\n    {\n      title: 'Key',\n      dataIndex: 'key',\n      key: 'key',\n      width: 120,\n      ellipsis: true,\n    },\n    {\n      title: 'Timestamp',\n      dataIndex: 'timestamp',\n      key: 'timestamp',\n      width: 180,\n      render: (timestamp: string) => new Date(timestamp).toLocaleString(),\n    },\n    {\n      title: 'Value',\n      dataIndex: 'value',\n      key: 'value',\n      ellipsis: true,\n      render: (value: string) => (\n        <span className=\"message-value\">\n          {value && value.length > 100 ? `${value.substring(0, 100)}...` : value || '<null>'}\n        </span>\n      ),\n    },\n    {\n      title: 'Size',\n      dataIndex: 'serializedValueSize',\n      key: 'serializedValueSize',\n      width: 80,\n      render: (size: number) => (\n        <Tag color=\"green\">{size ? `${size}B` : 'N/A'}</Tag>\n      ),\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      width: 100,\n      render: (_: any, record: any) => (\n        <Button\n          type=\"link\"\n          icon={<EyeOutlined />}\n          size=\"small\"\n          onClick={() => {\n            // Copy message to clipboard\n            const messageText = `Topic: ${record.topic}\\nPartition: ${record.partition}\\nOffset: ${record.offset}\\nKey: ${record.key || 'null'}\\nValue: ${record.value || 'null'}\\nTimestamp: ${record.timestamp}`\n            navigator.clipboard.writeText(messageText)\n            message.success('Message copied to clipboard!')\n          }}\n        >\n          Copy\n        </Button>\n      ),\n    },\n  ]\n\n  const handleSearch = async (values: any) => {\n    setLoading(true)\n    try {\n      console.log('Searching messages:', values)\n\n      const params = new URLSearchParams()\n      if (values.partition !== undefined) params.append('partition', values.partition)\n      if (values.offset) params.append('startOffset', values.offset)\n      else params.append('startOffset', 'earliest') // Default to earliest\n      if (values.limit) params.append('limit', values.limit)\n      else params.append('limit', '100') // Default limit\n\n      const queryString = params.toString() ? `?${params.toString()}` : ''\n      const response = await fetch(`/api/v1/topics/connections/${values.connection}/topics/${values.topic}/messages${queryString}`, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n\n      if (response.ok) {\n        const data = await response.json()\n        setMessages(data)\n        message.success(`Found ${data.length} messages`)\n      } else {\n        message.error('Failed to search messages')\n      }\n    } catch (error) {\n      console.error('Error searching messages:', error)\n      message.error('Failed to search messages')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div>\n      <div style={{ marginBottom: 24 }}>\n        <Title level={2}>Message Browser</Title>\n      </div>\n\n      <Card title=\"Search Messages\" style={{ marginBottom: 24 }}>\n        <Form\n          form={form}\n          layout=\"vertical\"\n          onFinish={handleSearch}\n        >\n          <div style={{ display: 'flex', gap: 16, flexWrap: 'wrap' }}>\n            <Form.Item\n              name=\"connection\"\n              label=\"Connection\"\n              rules={[{ required: true, message: 'Please select a connection' }]}\n              style={{ minWidth: 200 }}\n            >\n              <Select\n                placeholder=\"Select connection\"\n                onChange={handleConnectionChange}\n                value={selectedConnection}\n              >\n                {connections.map(connection => (\n                  <Option key={connection.id} value={connection.id}>\n                    {connection.name}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"topic\"\n              label=\"Topic\"\n              rules={[{ required: true, message: 'Please select a topic' }]}\n              style={{ minWidth: 200 }}\n            >\n              <Select\n                placeholder=\"Select topic\"\n                disabled={!selectedConnection || topics.length === 0}\n                onChange={handleTopicChange}\n                showSearch\n                filterOption={(input, option) => {\n                  const label = option?.label?.toString() || ''\n                  const children = option?.children?.toString() || ''\n                  return label.toLowerCase().includes(input.toLowerCase()) ||\n                         children.toLowerCase().includes(input.toLowerCase())\n                }}\n              >\n                {topics.map(topic => (\n                  <Option key={topic.name} value={topic.name}>\n                    {topic.name} ({topic.partitionCount} partitions)\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"partition\"\n              label=\"Partition\"\n              style={{ minWidth: 120 }}\n            >\n              <Select placeholder=\"All partitions\" allowClear>\n                {selectedConnection && topics.length > 0 && form.getFieldValue('topic') &&\n                  Array.from({ length: topics.find(t => t.name === form.getFieldValue('topic'))?.partitionCount || 0 }, (_, i) => (\n                    <Option key={i} value={i}>Partition {i}</Option>\n                  ))\n                }\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"offset\"\n              label=\"Start Offset\"\n              style={{ minWidth: 150 }}\n            >\n              <Select placeholder=\"Earliest\" allowClear defaultValue=\"earliest\">\n                <Option value=\"earliest\">Earliest</Option>\n                <Option value=\"latest\">Latest</Option>\n                <Option value=\"custom\">Custom</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"limit\"\n              label=\"Max Messages\"\n              style={{ minWidth: 120 }}\n            >\n              <Select placeholder=\"100\" defaultValue=\"100\">\n                <Option value=\"10\">10</Option>\n                <Option value=\"50\">50</Option>\n                <Option value=\"100\">100</Option>\n                <Option value=\"500\">500</Option>\n                <Option value=\"1000\">1000</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              label=\" \"\n              style={{ minWidth: 200 }}\n            >\n              <Space>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  loading={loading}\n                  icon={<SearchOutlined />}\n                  disabled={!selectedConnection || topics.length === 0}\n                >\n                  Search Messages\n                </Button>\n                <Button onClick={() => form.resetFields()}>\n                  Clear\n                </Button>\n              </Space>\n            </Form.Item>\n          </div>\n        </Form>\n      </Card>\n\n      {selectedTopicStats && (\n        <Card title=\"Topic Statistics\" style={{ marginTop: 16 }}>\n          <div style={{ display: 'flex', gap: 24, flexWrap: 'wrap' }}>\n            <div>\n              <strong>Total Messages:</strong> {selectedTopicStats.totalMessages?.toLocaleString() || 'N/A'}\n            </div>\n            <div>\n              <strong>Partitions:</strong> {selectedTopicStats.partitionCount || 'N/A'}\n            </div>\n            <div>\n              <strong>Topic:</strong> {selectedTopicStats.topic || 'N/A'}\n            </div>\n            <div>\n              <strong>Last Updated:</strong> {selectedTopicStats.timestamp ? new Date(selectedTopicStats.timestamp).toLocaleString() : 'N/A'}\n            </div>\n          </div>\n        </Card>\n      )}\n\n      {messages.length > 0 && (\n        <Card title={`Messages (${messages.length} found)`}>\n          <Table\n            columns={columns}\n            dataSource={messages}\n            rowKey={(record) => `${record.partition}-${record.offset}`}\n            pagination={{ pageSize: 20 }}\n            scroll={{ x: 1000 }}\n          />\n        </Card>\n      )}\n    </div>\n  )\n}\n\nexport default Messages\n","import React, { useState } from 'react'\nimport { Form, Input, Button, Card, Typography, Alert, Space } from 'antd'\nimport { UserOutlined, LockOutlined, ApiOutlined } from '@ant-design/icons'\nimport { useAuthStore } from '../stores/authStore'\n\nconst { Title, Text } = Typography\n\nconst Login: React.FC = () => {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const { login } = useAuthStore()\n\n  const onFinish = async (values: { username: string; password: string }) => {\n    setLoading(true)\n    setError(null)\n\n    try {\n      await login(values.username, values.password)\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Login failed')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div\n      style={{\n        minHeight: '100vh',\n        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '20px',\n      }}\n    >\n      <Card\n        style={{\n          width: '100%',\n          maxWidth: 400,\n          boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\n          borderRadius: 16,\n        }}\n      >\n        <div style={{ textAlign: 'center', marginBottom: 32 }}>\n          <Space direction=\"vertical\" size=\"small\">\n            <ApiOutlined style={{ fontSize: 48, color: '#1890ff' }} />\n            <Title level={2} style={{ margin: 0 }}>\n              Kafka Web Tool v2\n            </Title>\n            <Text type=\"secondary\">Modern Kafka Management Interface</Text>\n          </Space>\n        </div>\n\n        {error && (\n          <Alert\n            message={error}\n            type=\"error\"\n            showIcon\n            style={{ marginBottom: 24 }}\n          />\n        )}\n\n        <Form\n          name=\"login\"\n          onFinish={onFinish}\n          autoComplete=\"off\"\n          size=\"large\"\n        >\n          <Form.Item\n            name=\"username\"\n            rules={[\n              { required: true, message: 'Please input your username!' },\n            ]}\n          >\n            <Input\n              prefix={<UserOutlined />}\n              placeholder=\"Username\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            rules={[\n              { required: true, message: 'Please input your password!' },\n            ]}\n          >\n            <Input.Password\n              prefix={<LockOutlined />}\n              placeholder=\"Password\"\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              loading={loading}\n              style={{ width: '100%' }}\n            >\n              Sign In\n            </Button>\n          </Form.Item>\n        </Form>\n\n        <div style={{ textAlign: 'center', marginTop: 24 }}>\n          <Text type=\"secondary\" style={{ fontSize: 12 }}>\n            Version 2.0.0 | Deployed on Kubernetes\n          </Text>\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default Login\n","import { FC } from 'react'\nimport { Routes, Route } from 'react-router-dom'\nimport { Layout } from 'antd'\nimport AppHeader from './components/layout/AppHeader'\nimport AppSidebar from './components/layout/AppSidebar'\nimport Dashboard from './pages/Dashboard'\nimport Connections from './pages/Connections'\nimport Topics from './pages/Topics'\nimport Consumers from './pages/Consumers'\nimport Producers from './pages/Producers'\nimport Messages from './pages/Messages'\nimport Login from './pages/Login'\nimport { useAuthStore } from './stores/authStore'\nimport './App.css'\n\nconst { Content } = Layout\n\nconst App: FC = () => {\n  const { isAuthenticated } = useAuthStore()\n\n  if (!isAuthenticated) {\n    return <Login />\n  }\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <AppHeader />\n      <Layout>\n        <AppSidebar />\n        <Layout style={{ padding: '24px' }}>\n          <Content\n            style={{\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n              background: '#fff',\n              borderRadius: 8,\n            }}\n          >\n            <Routes>\n              <Route path=\"/\" element={<Dashboard />} />\n              <Route path=\"/dashboard\" element={<Dashboard />} />\n              <Route path=\"/connections\" element={<Connections />} />\n              <Route path=\"/topics\" element={<Topics />} />\n              <Route path=\"/consumers\" element={<Consumers />} />\n              <Route path=\"/producers\" element={<Producers />} />\n              <Route path=\"/messages\" element={<Messages />} />\n            </Routes>\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { BrowserRouter } from 'react-router-dom'\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\nimport { ConfigProvider } from 'antd'\nimport App from './App'\nimport './index.css'\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: 1,\n      refetchOnWindowFocus: false,\n    },\n  },\n})\n\n// Ant Design theme configuration\nconst theme = {\n  token: {\n    colorPrimary: '#1890ff',\n    borderRadius: 6,\n  },\n}\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ConfigProvider theme={theme}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </ConfigProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n)\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","_extends","target","i","source","key","Action","PopStateEventType","createBrowserHistory","options","createBrowserLocation","window","globalHistory","pathname","search","hash","createLocation","createBrowserHref","to","createPath","getUrlBasedHistory","invariant","value","message","warning","cond","createKey","getHistoryState","location","index","current","state","parsePath","_ref","path","parsedPath","hashIndex","searchIndex","getLocation","createHref","validateLocation","v5Compat","action","listener","getIndex","handlePop","nextIndex","delta","history","push","historyState","url","error","replace","createURL","base","href","fn","ResultType","matchRoutes","routes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","meta","joinPaths","routesMeta","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","required","restExploded","result","subpath","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","score","segment","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","normalizePathname","pattern","matcher","compiledParams","compilePath","pathnameBase","captureGroups","memo","paramName","splatValue","caseSensitive","params","regexpSource","_","v","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","idx","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React.createContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","RouteErrorContext","useInRouterContext","React.useContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","cb","React.useLayoutEffect","useNavigate","isDataRoute","useNavigateStable","useNavigateUnstable","dataRouterContext","future","navigator","routePathnamesJson","UNSAFE_getResolveToMatches","activeRef","React.useRef","React.useCallback","useRoutes","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","React.createElement","DefaultErrorComponent","useRouteError","stack","preStyles","React.Fragment","defaultErrorElement","RenderErrorBoundary","React.Component","props","errorInfo","RenderedRoute","routeContext","children","_dataRouterState","_future","errors","errorIndex","renderFallback","fallbackIndex","loaderData","needsToRunLoader","outlet","shouldRenderHydrateFallback","errorElement","hydrateFallbackElement","warningOnce","getChildren","DataRouterHook","DataRouterStateHook","useDataRouterContext","hookName","ctx","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","_state$errors","routeId","router","id","alreadyWarned$1","logV6DeprecationWarnings","renderFuture","routerFuture","Route","_props","Router","_ref5","basenameProp","locationProp","navigationType","staticProp","navigationContext","React.useMemo","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","React.Children","element","React.isValidElement","treePath","REACT_ROUTER_VERSION","START_TRANSITION","startTransitionImpl","React","BrowserRouter","_ref4","historyRef","setStateImpl","React.useState","v7_startTransition","setState","newState","React.useEffect","UNSAFE_logV6DeprecationWarnings","Subscribable","isServer","noop","functionalUpdate","updater","input","isValidTimeout","timeUntilStale","updatedAt","staleTime","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","hashQueryKeyByOptions","partialMatchKey","isActive","matchMutation","mutation","status","mutationKey","hashKey","val","isPlainObject","replaceEqualDeep","array","isPlainArray","aItems","aSize","bItems","bSize","copy","aItemsSet","equalItems","o","hasObjectPrototype","ctor","prot","sleep","timeout","resolve","replaceData","prevData","data","addToEnd","items","item","max","newItems","addToStart","skipToken","ensureQueryFn","fetchOptions","FocusManager","_a","__privateAdd","_focused","_cleanup","_setup","__privateSet","onFocus","__privateGet","setup","focused","isFocused","focusManager","OnlineManager","_online","onOnline","onlineListener","offlineListener","online","onlineManager","pendingThenable","reject","thenable","_resolve","_reject","finalize","reason","defaultRetryDelay","failureCount","canFetch","networkMode","CancelledError","isCancelledError","createRetryer","config","isRetryCancelled","isResolved","continueFn","cancel","cancelOptions","cancelRetry","continueRetry","canContinue","canStart","pause","continueResolve","run","promiseOrValue","initialPromise","retry","retryDelay","delay","shouldRetry","defaultScheduler","createNotifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","schedule","flush","originalQueue","args","notifyManager","Removable","_gcTimeout","newGcTime","Query","_Query_instances","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","getDefaultState","newData","__privateMethod","dispatch_fn","setStateOptions","promise","_b","observer","x","abortController","addSignalProperty","object","fetchFn","queryFn","queryFnContext","queryFnContext2","context","context2","_c","onError","_d","reducer","fetchState","hasData","initialDataUpdatedAt","QueryCache","_queries","queryHash","queryInMap","defaultedFilters","queries","event","Mutation","_Mutation_instances","_observers","_mutationCache","variables","onContinue","restored","isPaused","_f","_e","_h","_g","_j","_i","_l","_k","_n","_m","_p","_o","_r","_q","_t","_s","MutationCache","_mutations","_scopes","_mutationId","__privateWrapper","scope","scopeFor","scopedMutations","mutationsWithSameScope","firstPendingMutation","foundMutation","pausedMutations","infiniteQueryBehavior","pages","direction","oldPages","oldPageParams","currentPage","cancelled","fetchPage","param","previous","page","maxPages","addTo","pageParamFn","getPreviousPageParam","getNextPageParam","oldData","remainingPages","pageParams","lastIndex","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","defaultedOptions","cachedData","queryCache","defaultedCancelOptions","promises","defaults","queryDefault","QueryClientContext","QueryClientProvider","jsx","createStoreImpl","createState","listeners","partial","nextState","previousState","getState","api","initialState","__vite_import_meta_env__","createStore","is","y","objectIs","useState","useEffect","useLayoutEffect","useDebugValue","useSyncExternalStore$2","subscribe","getSnapshot","_useState","inst","forceUpdate","checkIfSnapshotChanged","latestGetSnapshot","nextValue","useSyncExternalStore$1","shim","useSyncExternalStoreShim_production","shimModule","require$$1","useSyncExternalStore","useRef","useMemo","withSelector_production","getServerSnapshot","selector","isEqual","instRef","memoizedSelector","nextSnapshot","hasMemo","memoizedSnapshot","currentSelection","memoizedSelection","nextSelection","maybeGetServerSnapshot","withSelectorModule","ReactExports","useSyncExternalStoreWithSelector","useSyncExternalStoreExports","didWarnAboutEqualityFn","identity","arg","useStore","equalityFn","slice","createImpl","useBoundStore","create","createJSONStorage","getStorage","storage","name","parse","str2","str","newValue","toThenable","onFulfilled","_onRejected","_onFulfilled","onRejected","oldImpl","baseOptions","set","get","persistedState","currentState","hasHydrated","hydrationListeners","finishHydrationListeners","thenableSerialize","setItem","errorInSync","serializedValue","savedSetState","configResult","stateFromStorage","hydrate","postRehydrationCallback","storageValue","deserializedStorageValue","migratedState","_a2","newOptions","newImpl","migrationResult","migrated","persistImpl","persist","useAuthStore","username","_password","user","token","Header","Layout","Text","Typography","AppHeader","logout","userMenuItems","UserOutlined","SettingOutlined","LogoutOutlined","jsxs","ApiOutlined","Space","Dropdown","Avatar","Sider","AppSidebar","navigate","menuItems","DashboardOutlined","UnorderedListOutlined","TeamOutlined","SendOutlined","MessageOutlined","handleMenuClick","selectedKey","Menu","bind","thisArg","toString","getPrototypeOf","iterator","toStringTag","kindOf","cache","thing","kindOfTest","typeOfTest","isArray","isUndefined","isBuffer","isFunction","isArrayBuffer","isArrayBufferView","isString","isNumber","isObject","isBoolean","prototype","isEmptyObject","isDate","isFile","isBlob","isFileList","isStream","isFormData","kind","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","trim","forEach","obj","allOwnKeys","keys","len","findKey","_key","_global","isContextDefined","merge","caseless","assignValue","targetKey","extend","stripBOM","content","inherits","constructor","superConstructor","descriptors","toFlatObject","sourceObj","destObj","filter","propFilter","prop","merged","endsWith","searchString","position","toArray","arr","isTypedArray","TypedArray","forEachEntry","_iterator","pair","matchAll","regExp","isHTMLForm","toCamelCase","p1","p2","hasOwnProperty","isRegExp","reduceDescriptors","reducedDescriptors","descriptor","ret","freezeMethods","toObjectSet","arrayOrString","delimiter","define","toFiniteNumber","defaultValue","isSpecCompliantForm","toJSONObject","visit","reducedValue","isAsyncFn","isThenable","_setImmediate","setImmediateSupported","postMessageSupported","callbacks","asap","isIterable","utils$1","AxiosError","code","request","response","utils","customProps","axiosError","httpAdapter","isVisitable","removeBrackets","renderKey","dots","isFlatArray","predicates","toFormData","formData","option","metaTokens","visitor","defaultVisitor","indexes","useBlob","convertValue","el","exposedHelpers","build","encode","charMap","AxiosURLSearchParams","encoder","_encode","buildURL","serializeFn","serializedParams","hashmarkIndex","InterceptorManager","fulfilled","rejected","transitionalDefaults","URLSearchParams$1","FormData$1","Blob$1","platform$1","URLSearchParams","FormData","Blob","hasBrowserEnv","_navigator","hasStandardBrowserEnv","hasStandardBrowserWebWorkerEnv","origin","platform","toURLEncodedForm","helpers","parsePropPath","arrayToObject","formDataToJSON","buildPath","isNumericKey","isLast","stringifySafely","rawValue","parser","headers","contentType","hasJSONContentType","isObjectPayload","_FormData","transitional","forcedJSONParsing","JSONRequested","strictJSONParsing","method","ignoreDuplicateOf","parseHeaders","rawHeaders","parsed","line","$internals","normalizeHeader","header","normalizeValue","parseTokens","tokens","tokensRE","isValidHeaderName","matchHeaderValue","isHeaderNameFilter","formatHeader","w","buildAccessors","accessorName","methodName","arg1","arg2","arg3","AxiosHeaders$1","valueOrRewrite","rewrite","self","setHeader","_value","_header","_rewrite","lHeader","setHeaders","entry","deleted","deleteHeader","format","normalized","targets","asStrings","computed","accessors","defineAccessor","AxiosHeaders","mapped","headerValue","transformData","fns","isCancel","CanceledError","settle","validateStatus","parseProtocol","speedometer","samplesCount","min","bytes","timestamps","head","tail","firstSampleTS","chunkLength","now","startedAt","bytesCount","passed","throttle","freq","timestamp","threshold","lastArgs","timer","invoke","progressEventReducer","isDownloadStream","bytesNotified","_speedometer","loaded","total","progressBytes","rate","inRange","progressEventDecorator","throttled","lengthComputable","asyncDecorator","isURLSameOrigin","isMSIE","cookies","expires","domain","secure","cookie","isAbsoluteURL","combineURLs","baseURL","relativeURL","buildFullPath","requestedURL","allowAbsoluteUrls","isRelativeUrl","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","configValue","resolveConfig","newConfig","withXSRFToken","xsrfHeaderName","xsrfCookieName","auth","xsrfValue","isXHRAdapterSupported","xhrAdapter","_config","requestData","requestHeaders","responseType","onUploadProgress","onDownloadProgress","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","done","onloadend","responseHeaders","err","timeoutErrorMessage","protocol","composeSignals","signals","length","controller","aborted","onabort","unsubscribe","signal","streamChunk","chunk","chunkSize","pos","readBytes","iterable","readStream","stream","reader","trackStream","onProgress","onFinish","_onFinish","loadedBytes","isFetchSupported","isReadableStreamSupported","encodeText","test","supportsRequestStream","duplexAccessed","hasContentType","DEFAULT_CHUNK_SIZE","supportsResponseStream","resolvers","res","getBodyLength","body","resolveBodyLength","fetchAdapter","cancelToken","withCredentials","composedSignal","requestContentLength","_request","contentTypeHeader","isCredentialsSupported","isStreamResponse","responseContentLength","responseData","knownAdapters","renderReason","isResolvedHandle","adapter","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","dispatchRequest","VERSION","validators","deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","correctSpelling","assertOptions","schema","allowUnknown","Axios$1","instanceConfig","configOrUrl","dummy","paramsSerializer","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","chain","fullPath","Axios","generateHTTPMethod","isForm","CancelToken$1","CancelToken","executor","resolvePromise","onfulfilled","abort","spread","isAxiosError","payload","HttpStatusCode","createInstance","defaultConfig","instance","axios","all","Cancel","formToJSON","getAdapter","Title","Dashboard","metrics","setMetrics","runningConsumers","setRunningConsumers","recentActivity","setRecentActivity","healthMetrics","setHealthMetrics","loading","setLoading","refreshing","setRefreshing","fetchDashboardData","metricsRes","consumersRes","activityRes","healthRes","stopConsumer","sessionId","stopAllConsumers","Modal","formatTimestamp","date","diffMs","diffMins","interval","consumerColumns","record","Tag","Button","StopOutlined","ReloadOutlined","Row","Col","Card","Statistic","CheckCircleOutlined","ExclamationCircleOutlined","Table","activity","PlayCircleOutlined","Option","Select","Connections","connections","setConnections","isModalVisible","setIsModalVisible","editingConnection","setEditingConnection","testingConnection","setTestingConnection","form","Form","fetchConnections","handleTestConnection","connection","conn","errorMsg","columns","text","actualStatus","EditOutlined","handleEdit","DeleteOutlined","handleDelete","handleAdd","handleSubmit","values","PlusOutlined","Input","Topics","topics","setTopics","filteredTopics","setFilteredTopics","selectedConnection","setSelectedConnection","searchText","setSearchText","viewModalVisible","setViewModalVisible","editModalVisible","setEditModalVisible","createModalVisible","setCreateModalVisible","selectedTopic","setSelectedTopic","topicStats","setTopicStats","editForm","filtered","topic","fetchTopics","connectionId","fetchTopicStats","topicName","stats","handleConnectionChange","handleViewTopic","handleEditTopic","handleCreateTopic","handleDeleteTopic","count","factor","Tooltip","EyeOutlined","Popconfirm","label","SearchOutlined","range","Descriptions","partition","InputNumber","Consumers","consumerMessages","setConsumerMessages","consumerStatus","setConsumerStatus","currentSessionId","setCurrentSessionId","pollingInterval","setPollingInterval","handleStartConsumer","consumerData","session","startMessagePolling","handlePauseConsumer","handleStopConsumer","stopMessagePolling","sessionResponse","messagesResponse","messages","handleCopyMessages","messagesText","msg","handleDownloadMessages","dataStr","dataBlob","link","messageColumns","offset","CopyOutlined","messageText","t","PauseCircleOutlined","DownloadOutlined","TextArea","TabPane","Tabs","Producers","uploadedFile","setUploadedFile","handleBulkConnectionChange","handleFileConnectionChange","handleSend","messageData","handleBulkSend","bulkConnection","bulkTopic","messageCount","bulkMessages","template","messageContent","handleFileUpload","fileConnection","fileTopic","lines","handleFileChange","info","file","Upload","UploadOutlined","Messages","setMessages","selectedTopicStats","setSelectedTopicStats","handleTopicChange","size","handleSearch","queryString","Login","setError","login","Alert","LockOutlined","Content","App","isAuthenticated","queryClient","theme","ReactDOM","ConfigProvider"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80]}